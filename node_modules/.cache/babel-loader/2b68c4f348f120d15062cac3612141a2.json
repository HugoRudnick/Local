{"ast":null,"code":"var _jsxFileName = \"C:\\\\Projetos3\\\\react-app\\\\src\\\\Components\\\\Usuarios.js\";\nimport React, { useState, useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport * as actions from '../Actions/usuario';\nimport UsuarioForms from './UsuarioForms';\nimport { Grid, Paper, TableContainer, table, TableHead, TableRow, TableCell, TableBody, withStyles, ButtonGroup, Button } from '@material-ui/core';\nimport EditIcon from \"@material-ui/icons/Edit\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport { useToasts } from 'react-toast-notifications';\n\nconst styles = theme => ({\n  root: {\n    '& . MuiTableCell-head': {\n      fontSize: '1.25rem'\n    }\n  },\n  paper: {\n    margin: theme.spacing(2),\n    padding: theme.spacing(2)\n  }\n});\n\nconst Usuarios = ({\n  classes,\n  ...props\n}) => {\n  const [currentId, setCurrentId] = useState(0);\n  useEffect(() => {\n    props.fetchAllUsuarios();\n  }, []); //toast  \n\n  const {\n    addToast\n  } = useToasts();\n\n  const onDelete = id => {\n    if (window.confirm('Confirmar exclusão do registro?')) props.deleteUsuario(id, () => addToast(\"Exclusão realizada com sucesso!\", {\n      appearance: 'info'\n    }));\n  };\n\n  useEffect(() => {\n    props.fetchAllUsuarios();\n  }, []);\n  return /*#__PURE__*/React.createElement(Paper, {\n    className: classes.paper,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 14\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(UsuarioForms, Object.assign({\n    currentId,\n    setCurrentId\n  }, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }\n  }))), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(TableContainer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"table\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(TableHead, {\n    className: classes.root,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(TableRow, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(TableCell, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 21\n    }\n  }, \"Usuarios\"), /*#__PURE__*/React.createElement(\"tableCell\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 21\n    }\n  }))), /*#__PURE__*/React.createElement(TableBody, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 17\n    }\n  }, props.usuarioList.map((record, index) => {\n    return /*#__PURE__*/React.createElement(TableRow, {\n      key: index,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 31\n      }\n    }, /*#__PURE__*/React.createElement(TableCell, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 25\n      }\n    }, record.usuario), /*#__PURE__*/React.createElement(\"tableCell\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(ButtonGroup, {\n      variant: \"Text\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 27\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(EditIcon, {\n      color: \"primary\",\n      onClick: () => {\n        setCurrentId(record.idUsuario);\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 37\n      }\n    }), \" \"), /*#__PURE__*/React.createElement(Button, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(DeleteIcon, {\n      color: \"secondary\",\n      onClick: () => onDelete(record.idUsuario),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 37\n      }\n    }), \" \"))));\n  })))))));\n};\n\nconst mapStateToProps = state => ({\n  usuarioList: state.usuario.list\n});\n\nconst mapActionToProps = {\n  fetchAllUsuarios: actions.fetchAll,\n  deleteUsuario: actions.Delete\n};\nexport default connect(mapStateToProps, mapActionToProps)(withStyles(styles)(Usuarios));","map":{"version":3,"sources":["C:/Projetos3/react-app/src/Components/Usuarios.js"],"names":["React","useState","useEffect","connect","actions","UsuarioForms","Grid","Paper","TableContainer","table","TableHead","TableRow","TableCell","TableBody","withStyles","ButtonGroup","Button","EditIcon","DeleteIcon","useToasts","styles","theme","root","fontSize","paper","margin","spacing","padding","Usuarios","classes","props","currentId","setCurrentId","fetchAllUsuarios","addToast","onDelete","id","window","confirm","deleteUsuario","appearance","usuarioList","map","record","index","usuario","idUsuario","mapStateToProps","state","list","mapActionToProps","fetchAll","Delete"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react'\r\nimport { connect } from 'react-redux';\r\nimport * as actions from '../Actions/usuario';\r\nimport UsuarioForms from './UsuarioForms'\r\nimport { Grid, Paper, TableContainer, table, TableHead, TableRow, TableCell, TableBody, withStyles, ButtonGroup, Button } from '@material-ui/core'\r\nimport EditIcon from \"@material-ui/icons/Edit\";\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\nimport { useToasts } from 'react-toast-notifications'\r\n\r\n\r\nconst styles = theme => ({\r\n    root: {\r\n      '& . MuiTableCell-head': {\r\n        fontSize: '1.25rem'\r\n      }\r\n    },\r\n    paper: {\r\n      margin: theme.spacing(2),\r\n      padding: theme.spacing(2)\r\n    }\r\n  })\r\n\r\nconst Usuarios = ({ classes, ...props }) => {\r\n    const [currentId, setCurrentId] = useState(0)\r\n\r\n    useEffect(() => {\r\n        props.fetchAllUsuarios()\r\n    }, [])\r\n\r\n    //toast  \r\n    const { addToast } = useToasts()\r\n\r\n    const onDelete = id => {\r\n        if(window.confirm('Confirmar exclusão do registro?'))\r\n        props.deleteUsuario(id,() => addToast(\"Exclusão realizada com sucesso!\", { appearance: 'info' }))\r\n    }\r\n\r\n    useEffect(() => {\r\n        props.fetchAllUsuarios()\r\n    }, [])\r\n    \r\n      return(<Paper className={classes.paper}>\r\n        <Grid container>\r\n          <Grid item xs={6}>\r\n            <UsuarioForms {...({ currentId, setCurrentId })} />\r\n          </Grid>\r\n  \r\n          <Grid item xs={6}>\r\n            <TableContainer>\r\n              <table>\r\n                <TableHead className={classes.root} >\r\n                  <TableRow>\r\n                    <TableCell>Usuarios</TableCell>\r\n                    {/* <TableCell>Senha</TableCell> */}\r\n                    <tableCell></tableCell>\r\n                  </TableRow>\r\n                </TableHead>\r\n                <TableBody>\r\n                  {\r\n                    props.usuarioList.map((record, index) => {\r\n                      return (<TableRow key={index}>\r\n                        <TableCell>{record.usuario}</TableCell>\r\n                        {/* <TableCell>{record.senha}</TableCell> */}\r\n                        <tableCell>\r\n                          <ButtonGroup variant=\"Text\">\r\n                            <Button><EditIcon color =\"primary\"\r\n                            onClick={() => { setCurrentId(record.idUsuario) }} /> </Button>\r\n                            \r\n                            <Button><DeleteIcon color =\"secondary\" \r\n                            onClick={() => onDelete(record.idUsuario)} /> </Button>\r\n                          </ButtonGroup>\r\n  \r\n                        </tableCell>\r\n                      </TableRow>)\r\n                    })\r\n                  }\r\n                </TableBody>\r\n              </table>\r\n            </TableContainer>\r\n          </Grid>\r\n  \r\n        </Grid>\r\n      </Paper>)\r\n}\r\n\r\n\r\nconst mapStateToProps = state => ({\r\n    usuarioList: state.usuario.list\r\n  })\r\n  \r\n  const mapActionToProps = {\r\n    fetchAllUsuarios: actions.fetchAll,\r\n    deleteUsuario: actions.Delete\r\n  }\r\n\r\nexport default connect(mapStateToProps, mapActionToProps)(withStyles(styles)(Usuarios));"]},"metadata":{},"sourceType":"module"}