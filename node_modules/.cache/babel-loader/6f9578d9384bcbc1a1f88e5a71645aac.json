{"ast":null,"code":"var _jsxFileName = \"C:\\\\Projetos3\\\\react-app\\\\src\\\\Components\\\\UsuarioForms.js\";\nimport React, { useState, useEffect } from 'react';\nimport { Grid, TextField, withStyles, FormControl, InputLabel, Select, MenuItem, Button, FormHelperText } from '@material-ui/core'; // import useForm from \"./useForm\";\n\nimport { connect } from 'react-redux';\nimport * as actions from '../Actions/usuarios';\n\nconst styles = theme => ({\n  root: {\n    '& .MuiTextField-root': {\n      margin: theme.spacing(1),\n      minWidth: 230\n    }\n  },\n  formControl: {\n    margin: theme.spacing(1),\n    minWidth: 230\n  },\n  smMargin: {\n    margin: theme.spacing(1)\n  }\n});\n\nconst initialFieldValues = {\n  usuario: '',\n  senha: ''\n};\n\nconst UsuariosForms = ({\n  classes,\n  ...props\n}) => {\n  const validate = (fieldValues = values) => {\n    let temp = { ...errors\n    };\n    if ('usuario' in fieldValues) temp.usuario = fieldValues.usuario ? \"\" : \"Campo Obrigatório.\"; // // if(!fieldValues.senha)\n    // //     temp.senha = fieldValues.senha? \"\" : \"Campo Obrigatório.\"\n    // if('senha' in fieldValues)\n    // temp.senha = fieldValues.senha? \"\" : \"Campo Obrigatório.\"\n\n    setErrors({ ...temp\n    }); // if(fieldValues == values){\n    //     return Object.values(temp).every(x => x == \"\")\n    // }\n  };\n\n  const {\n    values,\n    setValues,\n    errors,\n    setErrors,\n    handleInputChange,\n    resetForm\n  } = useForm(initialFieldValues, validate, props.setCurrentId);\n\n  const handleSubmit = e => {\n    e.preventDefault(); //  if(validate()) {\n\n    const onSuccess = () => {\n      resetForm(); // addToast(\"Submitted successfully\", { appearance: 'success' })\n    };\n\n    if (props.currentId == 0) {\n      props.createUsuarios(values, onSuccess);\n    } else {\n      props.updateUsuario(props.currentId, values, onSuccess);\n    } //  }\n\n  };\n\n  return /*#__PURE__*/React.createElement(\"form\", {\n    autoComplete: \"off\",\n    noValidate: true,\n    className: classes.root,\n    onSubmit: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    Item: true,\n    xs: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(TextField, Object.assign({\n    name: \"usuario\",\n    variant: \"outlined\",\n    label: \"Usu\\xE1rio\",\n    value: values.usuario,\n    onChange: handleInputChange\n  }, errors.usuario && {\n    error: true,\n    helperText: errors.usuario\n  }, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(TextField, Object.assign({\n    name: \"senha\",\n    variant: \"outlined\",\n    label: \"Senha\",\n    type: \"password\",\n    value: values.senha,\n    onChange: handleInputChange\n  }, errors.senha && {\n    error: true,\n    helperText: errors.senha\n  }, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    variant: \"contained\",\n    color: \"primary\",\n    type: \"submit\",\n    className: classes.smMargin,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 21\n    }\n  }, \"Submit\"), /*#__PURE__*/React.createElement(\"button\", {\n    variant: \"contained\",\n    className: classes.smMargin,\n    onClick: resetForm,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 21\n    }\n  }, \"Reset\")))));\n};\n\nexport default UsuariosForms;","map":{"version":3,"sources":["C:/Projetos3/react-app/src/Components/UsuarioForms.js"],"names":["React","useState","useEffect","Grid","TextField","withStyles","FormControl","InputLabel","Select","MenuItem","Button","FormHelperText","connect","actions","styles","theme","root","margin","spacing","minWidth","formControl","smMargin","initialFieldValues","usuario","senha","UsuariosForms","classes","props","validate","fieldValues","values","temp","errors","setErrors","setValues","handleInputChange","resetForm","useForm","setCurrentId","handleSubmit","e","preventDefault","onSuccess","currentId","createUsuarios","updateUsuario","error","helperText"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react'\r\nimport { Grid, TextField, withStyles, FormControl, InputLabel, Select, MenuItem, Button, FormHelperText } from '@material-ui/core';\r\n// import useForm from \"./useForm\";\r\nimport { connect } from 'react-redux'\r\nimport * as actions from '../Actions/usuarios'\r\n\r\nconst styles = theme =>({\r\n    root: {\r\n        '& .MuiTextField-root': {\r\n            margin: theme.spacing(1),\r\n            minWidth: 230,\r\n        }\r\n    },\r\n    formControl: {\r\n        margin: theme.spacing(1),\r\n        minWidth: 230,\r\n    },\r\n    smMargin:{\r\n        margin: theme.spacing(1)\r\n    }\r\n})\r\n\r\nconst initialFieldValues ={\r\n    usuario : '',\r\n    senha : ''\r\n}\r\n\r\nconst UsuariosForms = ({ classes, ...props }) => {\r\n\r\n    const validate = (fieldValues = values) => {\r\n        let temp = { ...errors }\r\n        if('usuario' in fieldValues)\r\n            temp.usuario = fieldValues.usuario? \"\" : \"Campo Obrigatório.\"\r\n        // // if(!fieldValues.senha)\r\n        // //     temp.senha = fieldValues.senha? \"\" : \"Campo Obrigatório.\"\r\n        // if('senha' in fieldValues)\r\n        // temp.senha = fieldValues.senha? \"\" : \"Campo Obrigatório.\"\r\n        setErrors({\r\n            ...temp\r\n        })\r\n    \r\n        // if(fieldValues == values){\r\n        //     return Object.values(temp).every(x => x == \"\")\r\n        // }\r\n    \r\n    }\r\n\r\n    const {\r\n        values,\r\n        setValues,\r\n        errors,\r\n        setErrors,\r\n        handleInputChange,\r\n        resetForm\r\n    } = useForm(initialFieldValues, validate, props.setCurrentId)\r\n\r\n    const handleSubmit = e => {\r\n        e.preventDefault()\r\n        //  if(validate()) {\r\n            const onSuccess = () => { \r\n                resetForm()\r\n                // addToast(\"Submitted successfully\", { appearance: 'success' })\r\n            }\r\n            if(props.currentId == 0 ){\r\n                 props.createUsuarios(values, onSuccess)\r\n            }else{\r\n                props.updateUsuario(props.currentId,values, onSuccess)\r\n            }    \r\n            \r\n        //  }\r\n    }\r\n\r\n    return (\r\n        <form autoComplete=\"off\" noValidate className={classes.root} onSubmit={handleSubmit}>\r\n          <Grid container>\r\n            <Grid Item xs ={6}>\r\n                <TextField\r\n                    name= \"usuario\"\r\n                    variant = \"outlined\"\r\n                    label=\"Usuário\"\r\n                    value={values.usuario}\r\n                    onChange={handleInputChange}\r\n                    {...(errors.usuario && { error: true, helperText: errors.usuario })}\r\n                    \r\n                />\r\n                <TextField\r\n                    name= \"senha\"\r\n                    variant = \"outlined\"\r\n                    label=\"Senha\"\r\n                    type=\"password\"\r\n                    value={values.senha}\r\n                    onChange={handleInputChange}\r\n                    {...(errors.senha && { error: true, helperText: errors.senha })}\r\n                />\r\n                <div>\r\n                    <button\r\n                        variant=\"contained\"\r\n                        color=\"primary\"\r\n                        type=\"submit\"\r\n                        className={classes.smMargin}                \r\n                    >\r\n                        Submit\r\n                    </button>\r\n    \r\n                    <button\r\n                        variant=\"contained\"\r\n                        className={classes.smMargin}                \r\n                        onClick={resetForm}\r\n                    >\r\n                        Reset\r\n                    </button>\r\n    \r\n    \r\n                </div>\r\n            </Grid>\r\n          </Grid>\r\n    \r\n        </form>\r\n      );\r\n}\r\n\r\nexport default UsuariosForms;"]},"metadata":{},"sourceType":"module"}