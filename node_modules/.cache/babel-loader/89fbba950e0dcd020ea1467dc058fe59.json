{"ast":null,"code":"import axios from 'axios';\nconst baseUrl = 'http://localhost:5243/api/';\nexport default {\n  usuario(url = baseUrl + 'usuario/') {\n    return {\n      fetchAll: () => axios.get(url),\n      fetchById: id => axios.get(url + id),\n      create: newRecord => axios.post(url, newRecord),\n      update: (id, updateRecord) => axios.put(url + id, updateRecord),\n      delete: id => axios.delete(url + id)\n    };\n  },\n\n  genero(url = baseUrl + 'genero/') {\n    return {\n      fetchAll: () => axios.get(url),\n      fetchById: id => axios.get(url + id),\n      create: newRecord => axios.post(url, newRecord),\n      update: (id, updateRecord) => axios.put(url + id, updateRecord),\n      delete: id => axios.delete(url + id),\n      deleteall: () => axios.delete(url)\n    };\n  },\n\n  filme(url = baseUrl + 'filme/') {\n    return {\n      fetchAll: () => axios.get(url),\n      fetchById: id => axios.get(url + id),\n      create: newRecord => axios.post(url, newRecord),\n      update: (id, updateRecord) => axios.put(url + id, updateRecord),\n      delete: id => axios.delete(url + id),\n      deleteall: () => axios.delete(url)\n    };\n  },\n\n  locacao(url = baseUrl + 'locacao/') {\n    return {\n      fetchAll: () => axios.get(url),\n      fetchById: id => axios.get(url + id),\n      create: newRecord => axios.post(url, newRecord),\n      update: (id, updateRecord) => axios.put(url + id, updateRecord),\n      delete: id => axios.delete(url + id),\n      deleteall: () => axios.delete(url)\n    };\n  }\n\n};","map":{"version":3,"sources":["C:/Projetos3/react-app/src/Actions/api.js"],"names":["axios","baseUrl","usuario","url","fetchAll","get","fetchById","id","create","newRecord","post","update","updateRecord","put","delete","genero","deleteall","filme","locacao"],"mappings":"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","sourcesContent":["import axios from 'axios'\r\n\r\nconst baseUrl = 'http://localhost:5243/api/'\r\n\r\nexport default {\r\n\r\n  usuario (url = baseUrl + 'usuario/') {\r\n    return {\r\n      fetchAll: () => axios.get(url),\r\n      fetchById: id => axios.get(url + id),\r\n      create: newRecord => axios.post(url, newRecord),\r\n      update: (id, updateRecord) => axios.put(url + id, updateRecord),\r\n      delete: (id) => axios.delete(url + id)\r\n    }\r\n  },\r\n\r\n  genero (url = baseUrl + 'genero/') {\r\n    return {\r\n      fetchAll: () => axios.get(url),\r\n      fetchById: id => axios.get(url + id),\r\n      create: newRecord => axios.post(url , newRecord),\r\n      update: (id, updateRecord) => axios.put(url + id, updateRecord),\r\n      delete: (id) => axios.delete(url + id),\r\n      deleteall: () => axios.delete(url)\r\n    }\r\n  },\r\n\r\n  filme (url = baseUrl + 'filme/') {\r\n    return {\r\n      fetchAll: () => axios.get(url),\r\n      fetchById: id => axios.get(url + id),\r\n      create: newRecord => axios.post(url, newRecord),\r\n      update: (id, updateRecord) => axios.put(url + id, updateRecord),\r\n      delete: (id) => axios.delete(url + id),\r\n      deleteall: () => axios.delete(url)\r\n    }\r\n  },\r\n\r\n  locacao (url = baseUrl + 'locacao/') {\r\n    return {\r\n      fetchAll: () => axios.get(url),\r\n      fetchById: id => axios.get(url + id),\r\n      create: newRecord => axios.post(url, newRecord),\r\n      update: (id, updateRecord) => axios.put(url + id, updateRecord),\r\n      delete: (id) => axios.delete(url + id),\r\n      deleteall: () => axios.delete(url)\r\n    }\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}