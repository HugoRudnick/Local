{"ast":null,"code":"var _jsxFileName = \"C:\\\\Projetos3\\\\react-app\\\\src\\\\Components\\\\GeneroForm.js\";\nimport React, { useState, useEffect } from 'react';\nimport { Grid, TextField, withStyles, FormControl, InputLabel, Select, MenuItem, Button, FormHelperText } from '@material-ui/core';\nimport useForm from \"./useForm\";\nimport { connect } from 'react-redux';\nimport * as actions from '../Actions/genero';\nimport { useToasts } from 'react-toast-notifications';\nimport dayjs from 'dayjs';\n\nconst styles = theme => ({\n  root: {\n    '& .MuiTextField-root': {\n      margin: theme.spacing(1),\n      minWidth: 230\n    }\n  },\n  formControl: {\n    margin: theme.spacing(1),\n    minWidth: 230\n  },\n  smMargin: {\n    margin: theme.spacing(1)\n  }\n});\n\nconst initialFieldValues = {\n  nome: '',\n  dataCriacao: '',\n  ativo: ''\n};\n\nconst GenerosForms = ({\n  classes,\n  ...props\n}) => {\n  //toast  \n  const {\n    addToast\n  } = useToasts(); //validação de campos\n\n  const validate = (fieldValues = values) => {\n    let temp = { ...errors\n    }; // if('usuario' in fieldValues)\n    //     temp.usuario = fieldValues.usuario? \"\" : \"Campo Obrigatório.\"\n    // // if(!fieldValues.senha)\n    // //     temp.senha = fieldValues.senha? \"\" : \"Campo Obrigatório.\"\n    // if('senha' in fieldValues)\n    // temp.senha = fieldValues.senha? \"\" : \"Campo Obrigatório.\"\n\n    setErrors({ ...temp\n    }); // if(fieldValues == values){\n    //     return Object.values(temp).every(x => x == \"\")\n    // }\n  };\n\n  const {\n    values,\n    setValues,\n    errors,\n    setErrors,\n    handleInputChange,\n    resetForm\n  } = useForm(initialFieldValues, validate, props.setCurrentId); //material-ui select\n\n  const inputLabel = React.useRef(null);\n  const [labelWidth, setLabelWidth] = React.useState(0);\n  React.useEffect(() => {\n    setLabelWidth(inputLabel.current.offsetWidth);\n  }, []);\n\n  const handleSubmit = e => {\n    e.preventDefault(); //  if(validate()) {\n\n    const onSuccess = () => {\n      resetForm();\n      addToast(\"Gênero cadastrado com sucesso!\", {\n        appearance: 'success'\n      });\n    }; // values.dataCriacao = dayjs(new Date()).format('YYYY-MM-DD')\n\n\n    values.dataCriacao = dayjs().format('YYYY-MM-DD');\n\n    if (props.currentId == 0) {\n      // if(name == \"incluir\"){\n      props.createGeneros(values, onSuccess); // }            \n    } else {\n      props.updateGenero(props.currentId, values, onSuccess);\n    } //  }\n\n  };\n\n  const onDeleteAll = () => {\n    // if (props.generoList.map.coun)\n    if (window.confirm('Confirmar exclusão dos registros?')) {\n      props.generoList.map((record, index) => {\n        props.deleteGenero(record.id, () => addToast(\"Exclusão realizada com sucesso!\", {\n          appearance: 'info'\n        }));\n      });\n    }\n  };\n\n  useEffect(() => {\n    console.log(props.currentId);\n\n    if (props.currentId != 0) {\n      setValues({ ...props.generoList.find(genero => genero.id == props.currentId)\n      });\n      setErrors({});\n    }\n  }, [props.currentId]);\n  return /*#__PURE__*/React.createElement(\"form\", {\n    autoComplete: \"off\",\n    noValidate: true,\n    className: classes.root,\n    onSubmit: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 5\n    }\n  }, \"Cadastro de Generos\", /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    Item: true,\n    xs: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(TextField, Object.assign({\n    name: \"nome\",\n    variant: \"outlined\",\n    label: \"Nome\",\n    value: values.nome,\n    onChange: handleInputChange\n  }, errors.nome && {\n    error: true,\n    helperText: errors.nome\n  }, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(FormControl, Object.assign({\n    variant: \"outlined\",\n    className: classes.formControl\n  }, errors.ativo && {\n    error: true\n  }, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(InputLabel, {\n    ref: inputLabel,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 25\n    }\n  }, \"Situa\\xE7\\xE3o\"), /*#__PURE__*/React.createElement(Select, {\n    name: \"ativo\",\n    value: values.ativo,\n    onChange: handleInputChange,\n    labelWidth: labelWidth,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(MenuItem, {\n    value: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 29\n    }\n  }, \"Selecione\"), /*#__PURE__*/React.createElement(MenuItem, {\n    value: \"Ativo\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 29\n    }\n  }, \"Ativo\"), /*#__PURE__*/React.createElement(MenuItem, {\n    value: \"Inativo\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 29\n    }\n  }, \"Inativo\")), errors.ativo && /*#__PURE__*/React.createElement(FormHelperText, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 42\n    }\n  }, errors.ativo)), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 191,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    variant: \"contained\",\n    color: \"primary\",\n    name: \"incluir\",\n    type: \"submit\",\n    className: classes.smMargin,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 192,\n      columnNumber: 17\n    }\n  }, \"Submit\"), /*#__PURE__*/React.createElement(\"button\", {\n    variant: \"contained\",\n    name: \"deletar\",\n    type: \"button\",\n    className: classes.smMargin,\n    onClick: onDeleteAll,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 210,\n      columnNumber: 17\n    }\n  }, \"Excluir Lista\")))));\n};\n\nconst mapStateToProps = state => ({\n  generoList: state.genero.list\n});\n\nconst mapActionToProps = {\n  createGeneros: actions.create,\n  updateGenero: actions.update,\n  deleteGenero: actions.Delete\n};\nexport default connect(mapStateToProps, mapActionToProps)(withStyles(styles)(GenerosForms));","map":{"version":3,"sources":["C:/Projetos3/react-app/src/Components/GeneroForm.js"],"names":["React","useState","useEffect","Grid","TextField","withStyles","FormControl","InputLabel","Select","MenuItem","Button","FormHelperText","useForm","connect","actions","useToasts","dayjs","styles","theme","root","margin","spacing","minWidth","formControl","smMargin","initialFieldValues","nome","dataCriacao","ativo","GenerosForms","classes","props","addToast","validate","fieldValues","values","temp","errors","setErrors","setValues","handleInputChange","resetForm","setCurrentId","inputLabel","useRef","labelWidth","setLabelWidth","current","offsetWidth","handleSubmit","e","preventDefault","onSuccess","appearance","format","currentId","createGeneros","updateGenero","onDeleteAll","window","confirm","generoList","map","record","index","deleteGenero","id","console","log","find","genero","error","helperText","mapStateToProps","state","list","mapActionToProps","create","update","Delete"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react'\r\nimport { Grid, TextField, withStyles, FormControl, InputLabel, Select, MenuItem, Button, FormHelperText } from '@material-ui/core';\r\nimport useForm from \"./useForm\";\r\nimport { connect } from 'react-redux'\r\nimport * as actions from '../Actions/genero'\r\nimport { useToasts } from 'react-toast-notifications'\r\nimport  dayjs  from 'dayjs'\r\n\r\nconst styles = theme =>({\r\n    root: {\r\n        '& .MuiTextField-root': {\r\n            margin: theme.spacing(1),\r\n            minWidth: 230,\r\n        }\r\n    },\r\n    formControl: {\r\n        margin: theme.spacing(1),\r\n        minWidth: 230,\r\n    },\r\n    smMargin:{\r\n        margin: theme.spacing(1)\r\n    }\r\n})\r\n\r\nconst initialFieldValues ={\r\n    nome : '',\r\n    dataCriacao : '',\r\n    ativo : ''\r\n}\r\n\r\nconst GenerosForms = ({ classes, ...props }) => {\r\n\r\n    //toast  \r\n    const { addToast } = useToasts()\r\n\r\n    //validação de campos\r\n const validate = (fieldValues = values) => {\r\n    let temp = { ...errors }\r\n    // if('usuario' in fieldValues)\r\n    //     temp.usuario = fieldValues.usuario? \"\" : \"Campo Obrigatório.\"\r\n    // // if(!fieldValues.senha)\r\n    // //     temp.senha = fieldValues.senha? \"\" : \"Campo Obrigatório.\"\r\n    // if('senha' in fieldValues)\r\n    // temp.senha = fieldValues.senha? \"\" : \"Campo Obrigatório.\"\r\n    setErrors({\r\n        ...temp\r\n    })\r\n\r\n    // if(fieldValues == values){\r\n    //     return Object.values(temp).every(x => x == \"\")\r\n    // }\r\n\r\n }\r\n     \r\n    const {\r\n        values,\r\n        setValues,\r\n        errors,\r\n        setErrors,\r\n        handleInputChange,\r\n        resetForm\r\n    } = useForm(initialFieldValues, validate, props.setCurrentId)\r\n\r\n    //material-ui select\r\n    const inputLabel = React.useRef(null);\r\n    const [labelWidth, setLabelWidth] = React.useState(0);\r\n    React.useEffect(() => {\r\n        setLabelWidth(inputLabel.current.offsetWidth);\r\n    }, []);\r\n\r\n\r\n    const handleSubmit = e => {\r\n        e.preventDefault()\r\n        //  if(validate()) {\r\n            const onSuccess = () => { \r\n                resetForm()\r\n                addToast(\"Gênero cadastrado com sucesso!\", { appearance: 'success' })\r\n            }\r\n\r\n            // values.dataCriacao = dayjs(new Date()).format('YYYY-MM-DD')\r\n            values.dataCriacao = dayjs().format('YYYY-MM-DD')\r\n           \r\n            if(props.currentId == 0 ){\r\n                // if(name == \"incluir\"){\r\n                     props.createGeneros(values, onSuccess)\r\n                // }            \r\n            }else{\r\n                props.updateGenero(props.currentId,values, onSuccess)\r\n            }    \r\n            \r\n        //  }\r\n    }\r\n\r\n    const onDeleteAll = (() => {\r\n        \r\n        // if (props.generoList.map.coun)\r\n        \r\n        if(window.confirm('Confirmar exclusão dos registros?'))\r\n        {\r\n            props.generoList.map((record, index) => {\r\n            props.deleteGenero(record.id,() => addToast(\"Exclusão realizada com sucesso!\", { appearance: 'info' }))    \r\n            })\r\n        }\r\n\r\n        \r\n      })\r\n\r\n\r\n    useEffect(() => {\r\n        console.log(props.currentId)\r\n        if(props.currentId != 0) {\r\n            setValues({\r\n                ...props.generoList.find(genero => genero.id == props.currentId)\r\n            })\r\n            setErrors({})\r\n        }\r\n    }, [props.currentId])\r\n\r\n\r\n    return (\r\n    <form autoComplete=\"off\" noValidate className={classes.root} onSubmit={handleSubmit}>\r\n        Cadastro de Generos\r\n      <Grid container>\r\n        <Grid Item xs ={6}>\r\n            <TextField\r\n                name= \"nome\"\r\n                variant = \"outlined\"\r\n                label=\"Nome\"\r\n                value={values.nome}\r\n                onChange={handleInputChange}\r\n                {...(errors.nome && { error: true, helperText: errors.nome })}\r\n                \r\n            />\r\n            {/* <TextField\r\n            disabled\r\n                name= \"dataCriacao\"\r\n                id=\"outlined-disabled\"  \r\n                variant = \"outlined\"\r\n                label=\"Data criação\"\r\n                type=\"date\"\r\n                value={values.dataCriacao}\r\n                onChange={handleInputChange}\r\n                {...(errors.dataCriacao && { error: true, helperText: errors.dataCriacao })}\r\n                \r\n            /> */}\r\n            {/* <TextField\r\n                disabled\r\n                id=\"date\"\r\n                name= \"dataCriacao\"\r\n                label=\"Data Criação\"\r\n                type=\"date\"\r\n                // value=\r\n                onChange={( e ) => { values.dataCriacao = e.target.value } }\r\n                // value={values.dataCriacao}\r\n                // defaultValue = {dayjs().format('DD/MM/YYYY')}\r\n                className={classes.textField}\r\n                InputLabelProps={{\r\n                    shrink: true,\r\n                }}\r\n            /> */}\r\n            \r\n            <FormControl variant=\"outlined\"\r\n                        className={classes.formControl}\r\n                        {...(errors.ativo && { error: true })}\r\n                    >\r\n                        <InputLabel ref={inputLabel}>Situação</InputLabel>\r\n                        <Select\r\n                            name=\"ativo\"\r\n                            value={values.ativo}\r\n                            onChange={handleInputChange}\r\n                            labelWidth={labelWidth}\r\n                        >\r\n                            <MenuItem value=\"\">Selecione</MenuItem>\r\n                            <MenuItem value=\"Ativo\">Ativo</MenuItem>\r\n                            <MenuItem value=\"Inativo\">Inativo</MenuItem>\r\n                        </Select>\r\n                        {errors.ativo && <FormHelperText>{errors.ativo}</FormHelperText>}\r\n                    </FormControl>\r\n\r\n            {/* campo situacao */}\r\n            \r\n            {/* <TextField\r\n                name= \"senha\"\r\n                variant = \"outlined\"\r\n                label=\"Senha\"\r\n                type=\"password\"\r\n                value={values.senha}\r\n                onChange={handleInputChange}\r\n                {...(errors.senha && { error: true, helperText: errors.senha })}\r\n            /> */}\r\n            <div>\r\n                <button\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                    name=\"incluir\"\r\n                    type=\"submit\"\r\n                    className={classes.smMargin}                \r\n                >\r\n                    Submit\r\n                </button>\r\n\r\n                {/* <button\r\n                    variant=\"contained\"\r\n                    className={classes.smMargin}                \r\n                    onClick={resetForm}\r\n                >\r\n                    Reset\r\n                </button> */}\r\n\r\n                <button\r\n                    variant=\"contained\"\r\n                    name=\"deletar\"\r\n                    type=\"button\"\r\n                    className={classes.smMargin}                \r\n                    onClick={ onDeleteAll }\r\n                >\r\n                    Excluir Lista\r\n                </button>\r\n            </div>\r\n        </Grid>\r\n      </Grid>\r\n\r\n    </form>\r\n  )\r\n}\r\nconst mapStateToProps = state => ({\r\n    generoList: state.genero.list\r\n})\r\n  \r\nconst mapActionToProps = {\r\n    createGeneros: actions.create,\r\n    updateGenero: actions.update,\r\n    deleteGenero: actions.Delete\r\n}\r\n\r\nexport default connect(mapStateToProps, mapActionToProps)(withStyles(styles)(GenerosForms));\r\n"]},"metadata":{},"sourceType":"module"}