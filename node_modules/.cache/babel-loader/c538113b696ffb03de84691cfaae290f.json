{"ast":null,"code":"import axios from'axios';var baseUrl='http://localhost:5243/api/';export default{usuario:function usuario(){var url=arguments.length>0&&arguments[0]!==undefined?arguments[0]:baseUrl+'usuario/';return{fetchAll:function fetchAll(){return axios.get(url);},fetchById:function fetchById(id){return axios.get(url+id);},create:function create(newRecord){return axios.post(url,newRecord);},update:function update(id,updateRecord){return axios.put(url+id,updateRecord);},delete:function _delete(id){return axios.delete(url+id);}};},genero:function genero(){var url=arguments.length>0&&arguments[0]!==undefined?arguments[0]:baseUrl+'genero/';return{fetchAll:function fetchAll(){return axios.get(url);},fetchById:function fetchById(id){return axios.get(url+id);},create:function create(newRecord){return axios.post(url,newRecord);},update:function update(id,updateRecord){return axios.put(url+id,updateRecord);},delete:function _delete(id){return axios.delete(url+id);},deleteall:function deleteall(){return axios.delete(url);}};},filme:function filme(){var url=arguments.length>0&&arguments[0]!==undefined?arguments[0]:baseUrl+'filme/';return{fetchAll:function fetchAll(){return axios.get(url);},fetchById:function fetchById(id){return axios.get(url+id);},create:function create(newRecord){return axios.post(url,newRecord);},update:function update(id,updateRecord){return axios.put(url+id,updateRecord);},delete:function _delete(id){return axios.delete(url+id);},deleteall:function deleteall(){return axios.delete(url);}};},locacao:function locacao(){var url=arguments.length>0&&arguments[0]!==undefined?arguments[0]:baseUrl+'locacao/';return{fetchAll:function fetchAll(){return axios.get(url);},fetchById:function fetchById(id){return axios.get(url+id);},create:function create(newRecord){return axios.post(url,newRecord);},update:function update(id,updateRecord){return axios.put(url+id,updateRecord);},delete:function _delete(id){return axios.delete(url+id);},deleteall:function deleteall(){return axios.delete(url);}};}};","map":{"version":3,"sources":["C:/Projetos3/react-app/src/Actions/api.js"],"names":["axios","baseUrl","usuario","url","fetchAll","get","fetchById","id","create","newRecord","post","update","updateRecord","put","delete","genero","deleteall","filme","locacao"],"mappings":"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","sourcesContent":["import axios from 'axios'\r\n\r\nconst baseUrl = 'http://localhost:5243/api/'\r\n\r\nexport default {\r\n\r\n  usuario (url = baseUrl + 'usuario/') {\r\n    return {\r\n      fetchAll: () => axios.get(url),\r\n      fetchById: id => axios.get(url + id),\r\n      create: newRecord => axios.post(url, newRecord),\r\n      update: (id, updateRecord) => axios.put(url + id, updateRecord),\r\n      delete: (id) => axios.delete(url + id)\r\n    }\r\n  },\r\n\r\n  genero (url = baseUrl + 'genero/') {\r\n    return {\r\n      fetchAll: () => axios.get(url),\r\n      fetchById: id => axios.get(url + id),\r\n      create: newRecord => axios.post(url , newRecord),\r\n      update: (id, updateRecord) => axios.put(url + id, updateRecord),\r\n      delete: (id) => axios.delete(url + id),\r\n      deleteall: () => axios.delete(url)\r\n    }\r\n  },\r\n\r\n  filme (url = baseUrl + 'filme/') {\r\n    return {\r\n      fetchAll: () => axios.get(url),\r\n      fetchById: id => axios.get(url + id),\r\n      create: newRecord => axios.post(url, newRecord),\r\n      update: (id, updateRecord) => axios.put(url + id, updateRecord),\r\n      delete: (id) => axios.delete(url + id),\r\n      deleteall: () => axios.delete(url)\r\n    }\r\n  },\r\n\r\n  locacao (url = baseUrl + 'locacao/') {\r\n    return {\r\n      fetchAll: () => axios.get(url),\r\n      fetchById: id => axios.get(url + id),\r\n      create: newRecord => axios.post(url, newRecord),\r\n      update: (id, updateRecord) => axios.put(url + id, updateRecord),\r\n      delete: (id) => axios.delete(url + id),\r\n      deleteall: () => axios.delete(url)\r\n    }\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}