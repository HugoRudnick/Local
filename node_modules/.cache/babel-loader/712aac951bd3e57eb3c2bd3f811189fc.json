{"ast":null,"code":"import _slicedToArray from\"C:\\\\Projetos3\\\\react-app\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";import _objectSpread from\"C:\\\\Projetos3\\\\react-app\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";import _objectWithoutProperties from\"C:\\\\Projetos3\\\\react-app\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectWithoutProperties\";import React,{useState,useEffect}from'react';import{Grid,TextField,withStyles,FormControl,InputLabel,Select,MenuItem,Button,FormHelperText}from'@material-ui/core';import useForm from\"./useForm\";import{connect}from'react-redux';import*as actions from'../Actions/filme';import*as actionsGenero from'../Actions/genero';import{useToasts}from'react-toast-notifications';import dayjs from'dayjs';var styles=function styles(theme){return{root:{'& .MuiTextField-root':{margin:theme.spacing(1),minWidth:230}},formControl:{margin:theme.spacing(1),minWidth:230},smMargin:{margin:theme.spacing(1)}};};var initialFieldValues={nome:'',dataCriacao:'',idGenero:'',ativo:''};var FilmesForms=function FilmesForms(_ref){var classes=_ref.classes,props=_objectWithoutProperties(_ref,[\"classes\"]);//toast  \nvar _useToasts=useToasts(),addToast=_useToasts.addToast;//validação de campos\nvar validate=function validate(){var fieldValues=arguments.length>0&&arguments[0]!==undefined?arguments[0]:values;var temp=_objectSpread({},errors);// if('usuario' in fieldValues)\n//     temp.usuario = fieldValues.usuario? \"\" : \"Campo Obrigatório.\"\n// // if(!fieldValues.senha)\n// //     temp.senha = fieldValues.senha? \"\" : \"Campo Obrigatório.\"\n// if('senha' in fieldValues)\n// temp.senha = fieldValues.senha? \"\" : \"Campo Obrigatório.\"\nsetErrors(_objectSpread({},temp));// if(fieldValues == values){\n//     return Object.values(temp).every(x => x == \"\")\n// }\n};var _useForm=useForm(initialFieldValues,validate,props.setCurrentId),values=_useForm.values,setValues=_useForm.setValues,errors=_useForm.errors,setErrors=_useForm.setErrors,handleInputChange=_useForm.handleInputChange,resetForm=_useForm.resetForm;//material-ui select\nvar inputLabel=React.useRef(null);var _React$useState=React.useState(0),_React$useState2=_slicedToArray(_React$useState,2),labelWidth=_React$useState2[0],setLabelWidth=_React$useState2[1];React.useEffect(function(){setLabelWidth(inputLabel.current.offsetWidth);},[]);var handleSubmit=function handleSubmit(e){e.preventDefault();//  if(validate()) {\nvar onSuccess=function onSuccess(){resetForm();addToast(\"Submitted successfully\",{appearance:'success'});};// values.dataCriacao = dayjs(new Date()).format('YYYY-MM-DD')\nvalues.dataCriacao=dayjs().format('YYYY-MM-DD');if(props.currentId==0){// if(name == \"incluir\"){\nprops.createFilmes(values,onSuccess);// }            \n}else{props.updateFilme(props.currentId,values,onSuccess);}//  }\n};var onDeleteAll=function onDeleteAll(){if(window.confirm('Confirmar exclusão dos registros?')){props.filmeList.map(function(record,index){props.deleteFilme(record.id,function(){return addToast(\"Exclusão realizada com sucesso!\",{appearance:'info'});});});}};useEffect(function(){// console.log(props.currentId)\nif(props.currentId!=0){setValues(_objectSpread({},props.filmeList.find(function(filme){return filme.id==props.currentId;})));setErrors({});}},[props.currentId]);useEffect(function(){// props.fecthGenero();\n},[]);return/*#__PURE__*/React.createElement(\"form\",{autoComplete:\"off\",noValidate:true,className:classes.root,onSubmit:handleSubmit},/*#__PURE__*/React.createElement(Grid,{container:true},/*#__PURE__*/React.createElement(Grid,{Item:true,xs:6},/*#__PURE__*/React.createElement(TextField,Object.assign({name:\"nome\",variant:\"outlined\",label:\"Nome\",value:values.nome,onChange:handleInputChange},errors.nome&&{error:true,helperText:errors.nome})),/*#__PURE__*/React.createElement(FormControl,Object.assign({variant:\"outlined\",className:classes.formControl},errors.idGenero&&{error:true}),/*#__PURE__*/React.createElement(InputLabel,{ref:inputLabel},\"Genero\"),/*#__PURE__*/React.createElement(Select,{name:\"genero\",value:values.ativo,onChange:handleInputChange,labelWidth:labelWidth},/*#__PURE__*/React.createElement(MenuItem,{value:\"\"},\"Selecione\")),errors.ativo&&/*#__PURE__*/React.createElement(FormHelperText,null,errors.ativo)),/*#__PURE__*/React.createElement(FormControl,Object.assign({variant:\"outlined\",className:classes.formControl},errors.ativo&&{error:true}),/*#__PURE__*/React.createElement(InputLabel,{ref:inputLabel},\"Situa\\xE7\\xE3o\"),/*#__PURE__*/React.createElement(Select,{name:\"ativo\",value:values.ativo,onChange:handleInputChange,labelWidth:labelWidth},/*#__PURE__*/React.createElement(MenuItem,{value:\"\"},\"Selecione\"),/*#__PURE__*/React.createElement(MenuItem,{value:\"Ativo\"},\"Ativo\"),/*#__PURE__*/React.createElement(MenuItem,{value:\"Inativo\"},\"Inativo\")),errors.ativo&&/*#__PURE__*/React.createElement(FormHelperText,null,errors.ativo)),/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(\"button\",{variant:\"contained\",color:\"primary\",name:\"incluir\",type:\"submit\",className:classes.smMargin},\"Submit\"),/*#__PURE__*/React.createElement(\"button\",{variant:\"contained\",name:\"deletar\",type:\"button\",className:classes.smMargin,onClick:onDeleteAll},\"Excluir Lista\")))));};var mapStateToProps=function mapStateToProps(state){return{filmeList:state.filme.list};};// const mapStateToProps = ({filme, genero}) => ({\n//     filmeList: state.filme.list,\n//     generoList: state.genero.list,\n// })\nvar mapActionToProps={createFilmes:actions.create,updateFilme:actions.update,deleteFilme:actions.Delete};export default connect(mapStateToProps,mapActionToProps)(withStyles(styles)(FilmesForms));","map":{"version":3,"sources":["C:/Projetos3/react-app/src/Components/FilmeForm.js"],"names":["React","useState","useEffect","Grid","TextField","withStyles","FormControl","InputLabel","Select","MenuItem","Button","FormHelperText","useForm","connect","actions","actionsGenero","useToasts","dayjs","styles","theme","root","margin","spacing","minWidth","formControl","smMargin","initialFieldValues","nome","dataCriacao","idGenero","ativo","FilmesForms","classes","props","addToast","validate","fieldValues","values","temp","errors","setErrors","setCurrentId","setValues","handleInputChange","resetForm","inputLabel","useRef","labelWidth","setLabelWidth","current","offsetWidth","handleSubmit","e","preventDefault","onSuccess","appearance","format","currentId","createFilmes","updateFilme","onDeleteAll","window","confirm","filmeList","map","record","index","deleteFilme","id","find","filme","error","helperText","mapStateToProps","state","list","mapActionToProps","create","update","Delete"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react'\r\nimport { Grid, TextField, withStyles, FormControl, InputLabel, Select, MenuItem, Button, FormHelperText } from '@material-ui/core';\r\nimport useForm from \"./useForm\";\r\nimport { connect } from 'react-redux'\r\nimport * as actions from '../Actions/filme'\r\nimport * as actionsGenero from '../Actions/genero'\r\nimport { useToasts } from 'react-toast-notifications'\r\nimport  dayjs  from 'dayjs'\r\n\r\nconst styles = theme =>({\r\n    root: {\r\n        '& .MuiTextField-root': {\r\n            margin: theme.spacing(1),\r\n            minWidth: 230,\r\n        }\r\n    },\r\n    formControl: {\r\n        margin: theme.spacing(1),\r\n        minWidth: 230,\r\n    },\r\n    smMargin:{\r\n        margin: theme.spacing(1)\r\n    }\r\n})\r\n\r\nconst initialFieldValues ={\r\n    nome : '',\r\n    dataCriacao : '',\r\n    idGenero : '',\r\n    ativo : ''\r\n}\r\n\r\nconst FilmesForms = ({ classes, ...props }) => {\r\n\r\n    //toast  \r\n    const { addToast } = useToasts()\r\n\r\n    //validação de campos\r\n const validate = (fieldValues = values) => {\r\n    let temp = { ...errors }\r\n    // if('usuario' in fieldValues)\r\n    //     temp.usuario = fieldValues.usuario? \"\" : \"Campo Obrigatório.\"\r\n    // // if(!fieldValues.senha)\r\n    // //     temp.senha = fieldValues.senha? \"\" : \"Campo Obrigatório.\"\r\n    // if('senha' in fieldValues)\r\n    // temp.senha = fieldValues.senha? \"\" : \"Campo Obrigatório.\"\r\n    setErrors({\r\n        ...temp\r\n    })\r\n\r\n    // if(fieldValues == values){\r\n    //     return Object.values(temp).every(x => x == \"\")\r\n    // }\r\n\r\n }\r\n     \r\n    const {\r\n        values,\r\n        setValues,\r\n        errors,\r\n        setErrors,\r\n        handleInputChange,\r\n        resetForm\r\n    } = useForm(initialFieldValues, validate, props.setCurrentId)\r\n\r\n    //material-ui select\r\n    const inputLabel = React.useRef(null);\r\n    const [labelWidth, setLabelWidth] = React.useState(0);\r\n    React.useEffect(() => {\r\n        setLabelWidth(inputLabel.current.offsetWidth);\r\n    }, []);\r\n\r\n\r\n    const handleSubmit = e => {\r\n        e.preventDefault()\r\n        //  if(validate()) {\r\n            const onSuccess = () => { \r\n                resetForm()\r\n                addToast(\"Submitted successfully\", { appearance: 'success' })\r\n            }\r\n\r\n            // values.dataCriacao = dayjs(new Date()).format('YYYY-MM-DD')\r\n            values.dataCriacao = dayjs().format('YYYY-MM-DD')\r\n           \r\n            if(props.currentId == 0 ){\r\n                // if(name == \"incluir\"){\r\n                     props.createFilmes(values, onSuccess)\r\n                // }            \r\n            }else{\r\n                props.updateFilme(props.currentId,values, onSuccess)\r\n            }    \r\n            \r\n        //  }\r\n    }\r\n\r\n    const onDeleteAll = (() => {\r\n        \r\n        if(window.confirm('Confirmar exclusão dos registros?'))\r\n        {\r\n            props.filmeList.map((record, index) => {\r\n            props.deleteFilme(record.id,() => addToast(\"Exclusão realizada com sucesso!\", { appearance: 'info' }))    \r\n            })\r\n        }       \r\n      })\r\n\r\n\r\n    useEffect(() => {\r\n        // console.log(props.currentId)\r\n        if(props.currentId != 0) {\r\n            setValues({\r\n                ...props.filmeList.find(filme => filme.id == props.currentId)\r\n            })\r\n            setErrors({})\r\n           \r\n        }\r\n    }, [props.currentId])\r\n\r\n    useEffect(() => {\r\n\r\n        // props.fecthGenero();\r\n\r\n    }, [])\r\n\r\n    return (\r\n    <form autoComplete=\"off\" noValidate className={classes.root} onSubmit={handleSubmit}>\r\n      <Grid container>\r\n        <Grid Item xs ={6}>\r\n            <TextField\r\n                name= \"nome\"\r\n                variant = \"outlined\"\r\n                label=\"Nome\"\r\n                value={values.nome}\r\n                onChange={handleInputChange}\r\n                {...(errors.nome && { error: true, helperText: errors.nome })}\r\n                \r\n            />\r\n            \r\n\r\n            <FormControl variant=\"outlined\"\r\n                        className={classes.formControl}\r\n                        {...(errors.idGenero && { error: true })}\r\n                    >\r\n                        <InputLabel ref={inputLabel}>Genero</InputLabel>\r\n                        <Select\r\n                            name=\"genero\"\r\n                            value={values.ativo}\r\n                            onChange={handleInputChange}\r\n                            labelWidth={labelWidth}\r\n                        >\r\n                            <MenuItem value=\"\">Selecione</MenuItem>\r\n                            {/* <MenuItem value=\"Ativo\">Ativo</MenuItem>\r\n                            <MenuItem value=\"Inativo\">Inativo</MenuItem> */}\r\n{\r\n                        // props.filmeList.map((record, index) => {\r\n                        //     return (\r\n                        //         <MenuItem value= { record.idGenero.nome } >  { record.idGenero.nome }   </MenuItem>   \r\n                        //     )\r\n                        // })\r\n}\r\n                        </Select>\r\n                        {errors.ativo && <FormHelperText>{errors.ativo}</FormHelperText>}\r\n            </FormControl>\r\n\r\n            \r\n            <FormControl variant=\"outlined\"\r\n                        className={classes.formControl}\r\n                        {...(errors.ativo && { error: true })}\r\n                    >\r\n                        <InputLabel ref={inputLabel}>Situação</InputLabel>\r\n                        <Select\r\n                            name=\"ativo\"\r\n                            value={values.ativo}\r\n                            onChange={handleInputChange}\r\n                            labelWidth={labelWidth}\r\n                        >\r\n                            <MenuItem value=\"\">Selecione</MenuItem>\r\n                            <MenuItem value=\"Ativo\">Ativo</MenuItem>\r\n                            <MenuItem value=\"Inativo\">Inativo</MenuItem>\r\n                        </Select>\r\n                        {errors.ativo && <FormHelperText>{errors.ativo}</FormHelperText>}\r\n            </FormControl>\r\n\r\n            <div>\r\n                <button\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                    name=\"incluir\"\r\n                    type=\"submit\"\r\n                    className={classes.smMargin}                \r\n                >\r\n                    Submit\r\n                </button>\r\n\r\n                <button\r\n                    variant=\"contained\"\r\n                    name=\"deletar\"\r\n                    type=\"button\"\r\n                    className={classes.smMargin}                \r\n                    onClick={ onDeleteAll }\r\n                >\r\n                    Excluir Lista\r\n                </button>\r\n            </div>\r\n        </Grid>\r\n      </Grid>\r\n\r\n    </form>\r\n  )\r\n}\r\n\r\n\r\nconst mapStateToProps = state => ({\r\n    filmeList: state.filme.list\r\n})\r\n\r\n// const mapStateToProps = ({filme, genero}) => ({\r\n//     filmeList: state.filme.list,\r\n//     generoList: state.genero.list,\r\n// })\r\n  \r\nconst mapActionToProps = {\r\n    createFilmes: actions.create,\r\n    updateFilme: actions.update,\r\n    deleteFilme: actions.Delete\r\n}\r\n\r\nexport default connect(mapStateToProps, mapActionToProps)(withStyles(styles)(FilmesForms));\r\n"]},"metadata":{},"sourceType":"module"}