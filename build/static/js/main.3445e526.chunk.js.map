{"version":3,"sources":["logo.svg","Actions/api.js","Actions/usuario.js","Reducers/Usuarios.js","Actions/genero.js","Reducers/Generos.js","Actions/filme.js","Reducers/Filmes.js","Actions/locacao.js","Reducers/locacaos.js","Reducers/index.js","Actions/Store.js","Components/useForm.js","Components/UsuarioForms.js","Components/Usuarios.js","Components/GeneroForm.js","Components/Generos.js","Components/FilmeForm.js","Components/Filmes.js","Components/LocacaoForm.js","Components/locacaos.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","baseUrl","url","fetchAll","axios","get","fetchById","id","create","newRecord","post","update","updateRecord","put","delete","deleteall","ACTION_TYPES","formateData","data","age","parseInt","initialState","list","Delete","onSuccess","dispatch","api","then","res","type","payload","catch","err","console","log","reducers","combineReducers","usuario","state","action","map","x","filter","genero","filme","locacao","store","createStore","compose","applyMiddleware","thunk","window","__REDUX_DEVTOOLS_EXTENSION__","useForm","initialFieldValues","validate","setCurrentId","useState","values","setValues","errors","setErrors","handleInputChange","e","target","name","value","fieldValue","resetForm","senha","mapActionToProps","createUsuarios","updateUsuario","connect","usuarioList","withStyles","theme","root","margin","spacing","minWidth","formControl","smMargin","classes","props","addToast","useToasts","fieldValues","temp","useEffect","currentId","find","idUsuario","autoComplete","noValidate","className","onSubmit","preventDefault","appearance","label","Grid","container","Item","xs","TextField","variant","onChange","error","helperText","color","fetchAllUsuarios","response","deleteUsuario","fontSize","paper","padding","Paper","item","UsuarioForms","TableContainer","TableHead","TableRow","TableCell","TableBody","record","index","key","ButtonGroup","Button","onClick","confirm","nome","dataCriacao","ativo","createGeneros","updateGenero","deleteGenero","actions","generoList","inputLabel","React","useRef","labelWidth","setLabelWidth","current","offsetWidth","dayjs","format","FormControl","InputLabel","ref","Select","MenuItem","FormHelperText","fetchAllGeneros","idGenero","createFilmes","updateFilme","deleteFilme","filmeList","fetchAllFilmes","generoId","createLocacao","updateLocacao","deleteLocacao","locacaoList","createlocacao","updatelocacao","cpf","fetchAllLocacao","LocacaoForm","filmeId","App","autoDismiss","Container","maxWidth","to","path","exact","component","Usuario","Genero","Filme","Locacao","Boolean","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.3445e526.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import axios from 'axios'\r\n\r\nconst baseUrl = 'http://localhost:5243/api/'\r\n\r\nexport default {\r\n\r\n  usuario (url = baseUrl + 'usuario/') {\r\n    return {\r\n      fetchAll: () => axios.get(url),\r\n      fetchById: id => axios.get(url + id),\r\n      create: newRecord => axios.post(url, newRecord),\r\n      update: (id, updateRecord) => axios.put(url + id, updateRecord),\r\n      delete: (id) => axios.delete(url + id)\r\n    }\r\n  },\r\n\r\n  genero (url = baseUrl + 'genero/') {\r\n    return {\r\n      fetchAll: () => axios.get(url),\r\n      fetchById: id => axios.get(url + id),\r\n      create: newRecord => axios.post(url , newRecord),\r\n      update: (id, updateRecord) => axios.put(url + id, updateRecord),\r\n      delete: (id) => axios.delete(url + id),\r\n      deleteall: () => axios.delete(url)\r\n    }\r\n  },\r\n\r\n  filme (url = baseUrl + 'filme/') {\r\n    return {\r\n      fetchAll: () => axios.get(url),\r\n      fetchById: id => axios.get(url + id),\r\n      create: newRecord => axios.post(url, newRecord),\r\n      update: (id, updateRecord) => axios.put(url + id, updateRecord),\r\n      delete: (id) => axios.delete(url + id),\r\n      deleteall: () => axios.delete(url)\r\n    }\r\n  },\r\n\r\n  locacao (url = baseUrl + 'locacao/') {\r\n    return {\r\n      fetchAll: () => axios.get(url),\r\n      fetchById: id => axios.get(url + id),\r\n      create: newRecord => axios.post(url, newRecord),\r\n      update: (id, updateRecord) => axios.put(url + id, updateRecord),\r\n      delete: (id) => axios.delete(url + id),\r\n      deleteall: () => axios.delete(url)\r\n    }\r\n  }\r\n}\r\n","import api from './api'\r\n\r\nexport const ACTION_TYPES = {\r\n  CREATE: 'CREATE',\r\n  UPDATE: 'UPDATE',\r\n  DELETE: 'DELETE',\r\n  FETCH_ALL: 'FETCH_ALL'\r\n}\r\n\r\nconst formateData = data =>({\r\n    ...data,\r\n    age:parseInt(data.age?data.age:0)\r\n})\r\n\r\n// funcao simplificada\r\nexport const fetchAll = () => dispatch => {\r\n  api.usuario().fetchAll()\r\n    .then(response => {\r\n      dispatch({\r\n        type: ACTION_TYPES.FETCH_ALL,\r\n        payload: response.data\r\n      })\r\n    })\r\n    .catch(err => console.log(err))\r\n}\r\n\r\nexport const create = (data, onSuccess) => dispatch => {\r\n    data = formateData(data)\r\n    api.usuario().create(data)\r\n    .then(res =>{\r\n        dispatch({\r\n            type:ACTION_TYPES.CREATE,\r\n            payload : res.data\r\n        })\r\n        onSuccess()\r\n    })\r\n    .catch(err => console.log(err))\r\n}\r\n\r\nexport const update = (id, data, onSuccess) => dispatch => {\r\n    data = formateData(data)\r\n    api.usuario().update(id,data)\r\n    .then(res =>{\r\n        dispatch({\r\n            type:ACTION_TYPES.UPDATE,\r\n            payload: { id, ...data }\r\n        })\r\n        onSuccess()\r\n    })\r\n    .catch(err => console.log(err))\r\n}    \r\n\r\nexport const Delete = (id,  onSuccess) => dispatch => {\r\n    api.usuario().delete(id)\r\n    .then(res =>{\r\n        dispatch({\r\n            type:ACTION_TYPES.DELETE,\r\n            payload: id\r\n        })\r\n        onSuccess()\r\n    })\r\n    .catch(err => console.log(err))\r\n}\r\n","import { ACTION_TYPES } from '../Actions/usuario'\r\nconst initialState = {\r\n  list: []\r\n}\r\n\r\nexport const usuario = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case ACTION_TYPES.FETCH_ALL:\r\n      return {\r\n        ...state,\r\n        list: [...action.payload]\r\n      }\r\n\r\n    case ACTION_TYPES.CREATE:\r\n      return {\r\n        ...state,\r\n        list: [...state.list, action.payload]\r\n      }  \r\n\r\n    case ACTION_TYPES.UPDATE:\r\n      return {\r\n        ...state,\r\n        list: state.list.map(x => x.id == action.payload.id ? action.payload:x)\r\n      }\r\n        \r\n    case ACTION_TYPES.DELETE:\r\n      return {\r\n        ...state,\r\n        list: state.list.filter(x => x.id != action.payload)\r\n      }\r\n    \r\n    default:\r\n      return state\r\n  }\r\n}\r\n","import api from './api'\r\n\r\nexport const ACTION_TYPES = {\r\n  CREATE: 'CREATE',\r\n  UPDATE: 'UPDATE',\r\n  DELETE: 'DELETE',\r\n  FETCH_ALL: 'FETCH_ALL'\r\n}\r\n\r\nconst formateData = data =>({\r\n    ...data,\r\n    age:parseInt(data.age?data.age:0)\r\n})\r\n\r\n// funcao simplificada\r\nexport const fetchAll = () => dispatch => {\r\n  api.genero().fetchAll()\r\n    .then(response => {\r\n      dispatch({\r\n        type: ACTION_TYPES.FETCH_ALL,\r\n        payload: response.data\r\n      })\r\n    })\r\n    .catch(err => console.log(err))\r\n}\r\n\r\nexport const create = (data, onSuccess) => dispatch => {\r\n    data = formateData(data)\r\n    api.genero().create(data)\r\n    .then(res =>{\r\n        dispatch({\r\n            type:ACTION_TYPES.CREATE,\r\n            payload : res.data\r\n        })\r\n        onSuccess()\r\n    })\r\n    .catch(err => console.log(err))\r\n}\r\n\r\nexport const update = (id, data, onSuccess) => dispatch => {\r\n    data = formateData(data)\r\n    api.genero().update(id,data)\r\n    .then(res =>{\r\n        dispatch({\r\n            type:ACTION_TYPES.UPDATE,\r\n            payload: { id, ...data }\r\n        })\r\n        onSuccess()\r\n    })\r\n    .catch(err => console.log(err))\r\n}    \r\n\r\nexport const Delete = (id,  onSuccess) => dispatch => {\r\n    api.genero().delete(id)\r\n    .then(res =>{\r\n        dispatch({\r\n            type:ACTION_TYPES.DELETE,\r\n            payload: id\r\n        })\r\n        onSuccess()\r\n    })\r\n    .catch(err => console.log(err))\r\n}\r\n\r\n","import { ACTION_TYPES } from '../Actions/genero'\r\nconst initialState = {\r\n  list: []\r\n}\r\n\r\nexport const genero = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case ACTION_TYPES.FETCH_ALL:\r\n      return {\r\n        ...state,\r\n        list: [...action.payload]\r\n      }\r\n\r\n    case ACTION_TYPES.CREATE:\r\n      return {\r\n        ...state,\r\n        list: [...state.list, action.payload]\r\n      }  \r\n\r\n    case ACTION_TYPES.UPDATE:\r\n      return {\r\n        ...state,\r\n        list: state.list.map(x => x.id == action.payload.id ? action.payload:x)\r\n      }\r\n        \r\n    case ACTION_TYPES.DELETE:\r\n      return {\r\n        ...state,\r\n        list: state.list.filter(x => x.id != action.payload)\r\n      }\r\n    \r\n    default:\r\n      return state\r\n  }\r\n}\r\n","import api from './api'\r\n\r\nexport const ACTION_TYPES = {\r\n  CREATE: 'CREATE',\r\n  UPDATE: 'UPDATE',\r\n  DELETE: 'DELETE',\r\n  FETCH_ALL: 'FETCH_ALL'\r\n}\r\n\r\nconst formateData = data =>({\r\n    ...data,\r\n    age:parseInt(data.age?data.age:0)\r\n})\r\n\r\n// funcao simplificada\r\nexport const fetchAll = () => dispatch => {\r\n  api.filme().fetchAll()\r\n    .then(response => {\r\n      dispatch({\r\n        type: ACTION_TYPES.FETCH_ALL,\r\n        payload: response.data\r\n      })\r\n    })\r\n    .catch(err => console.log(err))\r\n}\r\n\r\nexport const create = (data, onSuccess) => dispatch => {\r\n    data = formateData(data)\r\n    api.filme().create(data)\r\n    .then(res =>{\r\n        dispatch({\r\n            type:ACTION_TYPES.CREATE,\r\n            payload : res.data\r\n        })\r\n        onSuccess()\r\n    })\r\n    .catch(err => console.log(err))\r\n}\r\n\r\nexport const update = (id, data, onSuccess) => dispatch => {\r\n    data = formateData(data)\r\n    api.filme().update(id,data)\r\n    .then(res =>{\r\n        dispatch({\r\n            type:ACTION_TYPES.UPDATE,\r\n            payload: { id, ...data }\r\n        })\r\n        onSuccess()\r\n    })\r\n    .catch(err => console.log(err))\r\n}    \r\n\r\nexport const Delete = (id,  onSuccess) => dispatch => {\r\n    api.filme().delete(id)\r\n    .then(res =>{\r\n        dispatch({\r\n            type:ACTION_TYPES.DELETE,\r\n            payload: id\r\n        })\r\n        onSuccess()\r\n    })\r\n    .catch(err => console.log(err))\r\n}","import { ACTION_TYPES } from '../Actions/filme'\r\nconst initialState = {\r\n  list: []\r\n}\r\n\r\nexport const filme = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case ACTION_TYPES.FETCH_ALL:\r\n      return {\r\n        ...state,\r\n        list: [...action.payload]\r\n      }\r\n\r\n    case ACTION_TYPES.CREATE:\r\n      return {\r\n        ...state,\r\n        list: [...state.list, action.payload]\r\n      }  \r\n\r\n    case ACTION_TYPES.UPDATE:\r\n      return {\r\n        ...state,\r\n        list: state.list.map(x => x.id == action.payload.id ? action.payload:x)\r\n      }\r\n        \r\n    case ACTION_TYPES.DELETE:\r\n      return {\r\n        ...state,\r\n        list: state.list.filter(x => x.id != action.payload)\r\n      }\r\n    \r\n    default:\r\n      return state\r\n  }\r\n}","import api from './api'\r\n\r\nexport const ACTION_TYPES = {\r\n  CREATE: 'CREATE',\r\n  UPDATE: 'UPDATE',\r\n  DELETE: 'DELETE',\r\n  FETCH_ALL: 'FETCH_ALL'\r\n}\r\n\r\nconst formateData = data =>({\r\n    ...data,\r\n    age:parseInt(data.age?data.age:0)\r\n})\r\n\r\n// funcao simplificada\r\nexport const fetchAll = () => dispatch => {\r\n  api.locacao().fetchAll()\r\n    .then(response => {\r\n      dispatch({\r\n        type: ACTION_TYPES.FETCH_ALL,\r\n        payload: response.data\r\n      })\r\n    })\r\n    .catch(err => console.log(err))\r\n}\r\n\r\nexport const create = (data, onSuccess) => dispatch => {\r\n    data = formateData(data)\r\n    api.locacao().create(data)\r\n    .then(res =>{\r\n        dispatch({\r\n            type:ACTION_TYPES.CREATE,\r\n            payload : res.data\r\n        })\r\n        onSuccess()\r\n    })\r\n    .catch(err => console.log(err))\r\n}\r\n\r\nexport const update = (id, data, onSuccess) => dispatch => {\r\n    data = formateData(data)\r\n    api.locacao().update(id,data)\r\n    .then(res =>{\r\n        dispatch({\r\n            type:ACTION_TYPES.UPDATE,\r\n            payload: { id, ...data }\r\n        })\r\n        onSuccess()\r\n    })\r\n    .catch(err => console.log(err))\r\n}    \r\n\r\nexport const Delete = (id,  onSuccess) => dispatch => {\r\n    api.locacao().delete(id)\r\n    .then(res =>{\r\n        dispatch({\r\n            type:ACTION_TYPES.DELETE,\r\n            payload: id\r\n        })\r\n        onSuccess()\r\n    })\r\n    .catch(err => console.log(err))\r\n}\r\n","import { ACTION_TYPES } from '../Actions/locacao'\r\nconst initialState = {\r\n  list: []\r\n}\r\n\r\nexport const locacao = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case ACTION_TYPES.FETCH_ALL:\r\n      return {\r\n        ...state,\r\n        list: [...action.payload]\r\n      }\r\n\r\n    case ACTION_TYPES.CREATE:\r\n      return {\r\n        ...state,\r\n        list: [...state.list, action.payload]\r\n      }  \r\n\r\n    case ACTION_TYPES.UPDATE:\r\n      return {\r\n        ...state,\r\n        list: state.list.map(x => x.id == action.payload.id ? action.payload:x)\r\n      }\r\n        \r\n    case ACTION_TYPES.DELETE:\r\n      return {\r\n        ...state,\r\n        list: state.list.filter(x => x.id != action.payload)\r\n      }\r\n    \r\n    default:\r\n      return state\r\n  }\r\n}","import { combineReducers } from 'redux'\r\nimport { usuario } from './Usuarios'\r\nimport { genero } from './Generos'\r\nimport { filme } from './Filmes'\r\nimport { locacao } from './locacaos'\r\n\r\nexport const reducers = combineReducers({\r\n  usuario,genero,filme,locacao\r\n})\r\n","import { createStore, applyMiddleware, compose } from 'redux'\r\nimport thunk from 'redux-thunk'\r\nimport { reducers } from '../Reducers'\r\n\r\nexport const store = createStore(\r\n  reducers,\r\n  compose(\r\n    applyMiddleware(thunk),\r\n    window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\r\n  )\r\n)\r\n","import React, { useState, useEffect } from \"react\";\r\n\r\nconst useForm = (initialFieldValues, validate, setCurrentId) => {\r\n    const [values, setValues] = useState(initialFieldValues)\r\n    const [errors, setErrors] = useState({})\r\n \r\n    const handleInputChange = e => {\r\n        const { name, value } = e.target\r\n        const fieldValue = { [name]: value }\r\n        setValues({\r\n            ...values,\r\n            ...fieldValue\r\n        })\r\n        validate(fieldValue)\r\n    }\r\n\r\n    const resetForm = () => {\r\n        setValues({\r\n            ...initialFieldValues\r\n        })\r\n        setErrors({})\r\n        setCurrentId(0)\r\n    }\r\n\r\n    return {\r\n        values,\r\n        setValues,\r\n        errors,\r\n        setErrors,\r\n        handleInputChange,\r\n        resetForm\r\n    };\r\n}\r\n\r\nexport default useForm;","import React, { useState, useEffect } from 'react'\r\nimport { Grid, TextField, withStyles, FormControl, InputLabel, Select, MenuItem, Button, FormHelperText } from '@material-ui/core';\r\nimport useForm from \"./useForm\";\r\nimport { connect } from 'react-redux'\r\nimport * as actions from '../Actions/usuario'\r\nimport { useToasts } from 'react-toast-notifications'\r\n\r\nconst styles = theme =>({\r\n    root: {\r\n        '& .MuiTextField-root': {\r\n            margin: theme.spacing(1),\r\n            minWidth: 230,\r\n        }\r\n    },\r\n\r\n    formControl: {\r\n        margin: theme.spacing(1),\r\n        minWidth: 230,\r\n    },\r\n\r\n    smMargin:{\r\n        margin: theme.spacing(1)\r\n    }\r\n})\r\n\r\nconst initialFieldValues ={\r\n    usuario : '',\r\n    senha : ''\r\n}\r\n\r\nconst UsuariosForms = ({classes, ...props}) => {\r\n\r\n    //toast  \r\n    const { addToast } = useToasts()\r\n\r\n    const validate = (fieldValues = values) => {\r\n        let temp = { ...errors }\r\n        if('usuario' in fieldValues)\r\n            temp.usuario = fieldValues.usuario? \"\" : \"Campo Obrigatório.\"\r\n        // // if(!fieldValues.senha)\r\n        // //     temp.senha = fieldValues.senha? \"\" : \"Campo Obrigatório.\"\r\n        // if('senha' in fieldValues)\r\n        // temp.senha = fieldValues.senha? \"\" : \"Campo Obrigatório.\"\r\n        setErrors({\r\n            ...temp\r\n        })\r\n    \r\n        // if(fieldValues == values){\r\n        //     return Object.values(temp).every(x => x == \"\")\r\n        // }\r\n    \r\n    }\r\n\r\n    const {\r\n        values,\r\n        setValues,\r\n        errors,\r\n        setErrors,\r\n        handleInputChange,\r\n        resetForm\r\n    } = useForm(initialFieldValues, validate, props.setCurrentId)\r\n\r\n    const handleSubmit = e => {\r\n        e.preventDefault()\r\n        //  if(validate()) {\r\n            const onSuccess = () => { \r\n                resetForm()\r\n                addToast(\"Cadastro realziado com sucesso!\", { appearance: 'success' })\r\n            }\r\n            if(props.currentId == 0 ){\r\n                 props.createUsuarios(values, onSuccess)\r\n            }else{\r\n                props.updateUsuario(props.currentId,values, onSuccess)\r\n            }    \r\n            \r\n        //  }\r\n    }\r\n\r\n    useEffect(() => {\r\n        if(props.currentId != 0) {\r\n            setValues({\r\n                ...props.usuarioList.find(usuario => usuario.idUsuario == props.currentId)\r\n            })\r\n            setErrors({})\r\n        }\r\n    }, [props.currentId])\r\n\r\n    return (\r\n        <form autoComplete=\"off\" noValidate className = { classes.root } onSubmit={handleSubmit} label = \"teste\">\r\n        Cadastro de Usuários\r\n          <Grid container>\r\n            <Grid Item xs ={6}>\r\n                <TextField\r\n                    name= \"usuario\"\r\n                    variant = \"outlined\"\r\n                    label=\"Usuário\"\r\n                    value={values.usuario}\r\n                    onChange={handleInputChange}\r\n                    {...(errors.usuario && { error: true, helperText: errors.usuario })}\r\n                    \r\n                />\r\n                <TextField\r\n                    name= \"senha\"\r\n                    variant = \"outlined\"\r\n                    label=\"Senha\"\r\n                    type=\"password\"\r\n                    value={values.senha}\r\n                    onChange={handleInputChange}\r\n                    {...(errors.senha && { error: true, helperText: errors.senha })}\r\n                />\r\n                <div>\r\n                    <button\r\n                        variant=\"contained\"\r\n                        color=\"primary\"\r\n                        type=\"submit\"\r\n                        className={classes.smMargin}                \r\n                    >\r\n                        Cadastrar\r\n                    </button>\r\n    \r\n                    {/* <button\r\n                        variant=\"contained\"\r\n                        className={classes.smMargin}                \r\n                        onClick={resetForm}\r\n                    >\r\n                        Reset\r\n                    </button> */}\r\n    \r\n    \r\n                </div>\r\n            </Grid>\r\n          </Grid>\r\n    \r\n        </form>\r\n      );\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    usuarioList: state.usuario.list\r\n})\r\n  \r\n  const mapActionToProps = {\r\n    createUsuarios: actions.create,\r\n    updateUsuario: actions.update\r\n}\r\n\r\nexport default connect(mapStateToProps, mapActionToProps)(withStyles(styles)(UsuariosForms));\r\n","import React, { useState, useEffect } from 'react'\r\nimport { connect } from 'react-redux';\r\nimport * as actions from '../Actions/usuario';\r\nimport UsuarioForms from './UsuarioForms'\r\nimport { Grid, Paper, TableContainer, table, TableHead, TableRow, TableCell, TableBody, withStyles, ButtonGroup, Button } from '@material-ui/core'\r\nimport EditIcon from \"@material-ui/icons/Edit\";\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\nimport { useToasts } from 'react-toast-notifications'\r\n\r\n\r\nconst styles = theme => ({\r\n    root: {\r\n      '& . MuiTableCell-head': {\r\n        fontSize: '1.25rem'\r\n      }\r\n    },\r\n    paper: {\r\n      margin: theme.spacing(2),\r\n      padding: theme.spacing(2)\r\n    }\r\n  })\r\n\r\nconst Usuarios = ({ classes, ...props }) => {\r\n    const [currentId, setCurrentId] = useState(0)\r\n\r\n    useEffect(() => {\r\n        props.fetchAllUsuarios()\r\n    }, [])\r\n\r\n    //toast  \r\n    const { addToast } = useToasts()\r\n\r\n    const onDelete = id => {\r\n        if(window.confirm('Confirmar exclusão do registro?'))\r\n        props.deleteUsuario(id,() => addToast(\"Exclusão realizada com sucesso!\", { appearance: 'info' }))\r\n    }\r\n    \r\n      return(<Paper className={classes.paper}>\r\n        <Grid container>\r\n          <Grid item xs={6}>\r\n            <UsuarioForms {...({ currentId, setCurrentId })} />\r\n          </Grid>\r\n  \r\n          <Grid item xs={6}>\r\n            <TableContainer>\r\n              <table>\r\n                <TableHead className={classes.root}>\r\n                  <TableRow>\r\n                    <TableCell>Usuarios</TableCell>\r\n                    {/* <TableCell>Senha</TableCell> */}\r\n                    <tableCell></tableCell>\r\n                  </TableRow>\r\n                </TableHead>\r\n                <TableBody>\r\n                  {\r\n                    props.usuarioList.map((record, index) => {\r\n                      return (<TableRow key={index}>\r\n                        <TableCell>{record.usuario}</TableCell>\r\n                        {/* <TableCell>{record.senha}</TableCell> */}\r\n                        <tableCell>\r\n                          <ButtonGroup variant=\"Text\">\r\n                            <Button><EditIcon color =\"primary\"\r\n                            onClick={() => { setCurrentId(record.idUsuario) }} /> </Button>\r\n                            \r\n                            <Button><DeleteIcon color =\"secondary\" \r\n                            onClick={() => onDelete(record.idUsuario)} /> </Button>\r\n                          </ButtonGroup>\r\n  \r\n                        </tableCell>\r\n                      </TableRow>)\r\n                    })\r\n                  }\r\n                </TableBody>\r\n              </table>\r\n            </TableContainer>\r\n          </Grid>\r\n  \r\n        </Grid>\r\n      </Paper>)\r\n}\r\n\r\n\r\nconst mapStateToProps = state => ({\r\n    usuarioList: state.usuario.list\r\n  })\r\n  \r\n  const mapActionToProps = {\r\n    fetchAllUsuarios: actions.fetchAll,\r\n    deleteUsuario: actions.Delete\r\n  }\r\n\r\nexport default connect(mapStateToProps, mapActionToProps)(withStyles(styles)(Usuarios));","import React, { useState, useEffect } from 'react'\r\nimport { Grid, TextField, withStyles, FormControl, InputLabel, Select, MenuItem, Button, FormHelperText } from '@material-ui/core';\r\nimport useForm from \"./useForm\";\r\nimport { connect } from 'react-redux'\r\nimport * as actions from '../Actions/genero'\r\nimport { useToasts } from 'react-toast-notifications'\r\nimport  dayjs  from 'dayjs'\r\n\r\nconst styles = theme =>({\r\n    root: {\r\n        '& .MuiTextField-root': {\r\n            margin: theme.spacing(1),\r\n            minWidth: 230,\r\n        }\r\n    },\r\n    formControl: {\r\n        margin: theme.spacing(1),\r\n        minWidth: 230,\r\n    },\r\n    smMargin:{\r\n        margin: theme.spacing(1)\r\n    }\r\n})\r\n\r\nconst initialFieldValues ={\r\n    nome : '',\r\n    dataCriacao : '',\r\n    ativo : ''\r\n}\r\n\r\nconst GenerosForms = ({ classes, ...props }) => {\r\n\r\n    //toast  \r\n    const { addToast } = useToasts()\r\n\r\n    //validação de campos\r\n const validate = (fieldValues = values) => {\r\n    let temp = { ...errors }\r\n    // if('usuario' in fieldValues)\r\n    //     temp.usuario = fieldValues.usuario? \"\" : \"Campo Obrigatório.\"\r\n    // // if(!fieldValues.senha)\r\n    // //     temp.senha = fieldValues.senha? \"\" : \"Campo Obrigatório.\"\r\n    // if('senha' in fieldValues)\r\n    // temp.senha = fieldValues.senha? \"\" : \"Campo Obrigatório.\"\r\n    setErrors({\r\n        ...temp\r\n    })\r\n\r\n    // if(fieldValues == values){\r\n    //     return Object.values(temp).every(x => x == \"\")\r\n    // }\r\n\r\n }\r\n     \r\n    const {\r\n        values,\r\n        setValues,\r\n        errors,\r\n        setErrors,\r\n        handleInputChange,\r\n        resetForm\r\n    } = useForm(initialFieldValues, validate, props.setCurrentId)\r\n\r\n    //material-ui select\r\n    const inputLabel = React.useRef(null);\r\n    const [labelWidth, setLabelWidth] = React.useState(0);\r\n    React.useEffect(() => {\r\n        setLabelWidth(inputLabel.current.offsetWidth);\r\n    }, []);\r\n\r\n\r\n    const handleSubmit = e => {\r\n        e.preventDefault()\r\n        //  if(validate()) {\r\n            const onSuccess = () => { \r\n                resetForm()\r\n                addToast(\"Gênero cadastrado com sucesso!\", { appearance: 'success' })\r\n            }\r\n\r\n            // values.dataCriacao = dayjs(new Date()).format('YYYY-MM-DD')\r\n            values.dataCriacao = dayjs().format('YYYY-MM-DD')\r\n           \r\n            if(props.currentId == 0 ){\r\n                // if(name == \"incluir\"){\r\n                     props.createGeneros(values, onSuccess)\r\n                // }            \r\n            }else{\r\n                props.updateGenero(props.currentId,values, onSuccess)\r\n            }    \r\n            \r\n        //  }\r\n    }\r\n\r\n    const onDeleteAll = (() => {\r\n        \r\n        if(window.confirm('Confirmar exclusão dos registros?'))\r\n        {\r\n            props.generoList.map((record, index) => {\r\n            props.deleteGenero(record.id,() => addToast(\"Exclusão realizada com sucesso!\", { appearance: 'info' }))    \r\n            })\r\n        }\r\n\r\n        \r\n      })\r\n\r\n\r\n    useEffect(() => {\r\n        console.log(props.currentId)\r\n        if(props.currentId != 0) {\r\n            setValues({\r\n                ...props.generoList.find(genero => genero.id == props.currentId)\r\n            })\r\n            setErrors({})\r\n        }\r\n    }, [props.currentId])\r\n\r\n\r\n    return (\r\n    <form autoComplete=\"off\" noValidate className={classes.root} onSubmit={handleSubmit}>\r\n        Cadastro de Gêneros\r\n      <Grid container>\r\n        <Grid Item xs ={6}>\r\n            <TextField\r\n                name= \"nome\"\r\n                variant = \"outlined\"\r\n                label=\"Nome\"\r\n                value={values.nome}\r\n                onChange={handleInputChange}\r\n                {...(errors.nome && { error: true, helperText: errors.nome })}\r\n                \r\n            />\r\n            {/* <TextField\r\n            disabled\r\n                name= \"dataCriacao\"\r\n                id=\"outlined-disabled\"  \r\n                variant = \"outlined\"\r\n                label=\"Data criação\"\r\n                type=\"date\"\r\n                value={values.dataCriacao}\r\n                onChange={handleInputChange}\r\n                {...(errors.dataCriacao && { error: true, helperText: errors.dataCriacao })}\r\n                \r\n            /> */}\r\n            {/* <TextField\r\n                disabled\r\n                id=\"date\"\r\n                name= \"dataCriacao\"\r\n                label=\"Data Criação\"\r\n                type=\"date\"\r\n                // value=\r\n                onChange={( e ) => { values.dataCriacao = e.target.value } }\r\n                // value={values.dataCriacao}\r\n                // defaultValue = {dayjs().format('DD/MM/YYYY')}\r\n                className={classes.textField}\r\n                InputLabelProps={{\r\n                    shrink: true,\r\n                }}\r\n            /> */}\r\n            \r\n            <FormControl variant=\"outlined\"\r\n                        className={classes.formControl}\r\n                        {...(errors.ativo && { error: true })}\r\n                    >\r\n                        <InputLabel ref={inputLabel}>Situação</InputLabel>\r\n                        <Select\r\n                            name=\"ativo\"\r\n                            value={values.ativo}\r\n                            onChange={handleInputChange}\r\n                            labelWidth={labelWidth}\r\n                        >\r\n                            <MenuItem value=\"\">Selecione</MenuItem>\r\n                            <MenuItem value=\"Ativo\">Ativo</MenuItem>\r\n                            <MenuItem value=\"Inativo\">Inativo</MenuItem>\r\n                        </Select>\r\n                        {errors.ativo && <FormHelperText>{errors.ativo}</FormHelperText>}\r\n                    </FormControl>\r\n\r\n            {/* campo situacao */}\r\n            \r\n            {/* <TextField\r\n                name= \"senha\"\r\n                variant = \"outlined\"\r\n                label=\"Senha\"\r\n                type=\"password\"\r\n                value={values.senha}\r\n                onChange={handleInputChange}\r\n                {...(errors.senha && { error: true, helperText: errors.senha })}\r\n            /> */}\r\n            <div>\r\n                <button\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                    name=\"incluir\"\r\n                    type=\"submit\"\r\n                    className={classes.smMargin}                \r\n                >\r\n                    Submit\r\n                </button>\r\n\r\n                {/* <button\r\n                    variant=\"contained\"\r\n                    className={classes.smMargin}                \r\n                    onClick={resetForm}\r\n                >\r\n                    Reset\r\n                </button> */}\r\n\r\n                <button\r\n                    variant=\"contained\"\r\n                    name=\"deletar\"\r\n                    type=\"button\"\r\n                    className={classes.smMargin}                \r\n                    onClick={ onDeleteAll }\r\n                >\r\n                    Excluir Lista\r\n                </button>\r\n            </div>\r\n        </Grid>\r\n      </Grid>\r\n\r\n    </form>\r\n  )\r\n}\r\nconst mapStateToProps = state => ({\r\n    generoList: state.genero.list\r\n})\r\n  \r\nconst mapActionToProps = {\r\n    createGeneros: actions.create,\r\n    updateGenero: actions.update,\r\n    deleteGenero: actions.Delete\r\n}\r\n\r\nexport default connect(mapStateToProps, mapActionToProps)(withStyles(styles)(GenerosForms));\r\n","import React, { useState, useEffect } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport * as actions from '../Actions/genero'\r\nimport GenerosForms from './GeneroForm'\r\nimport { Grid, Paper, TableContainer, table, TableHead, TableRow, TableCell, TableBody, withStyles, ButtonGroup, Button } from '@material-ui/core'\r\nimport EditIcon from \"@material-ui/icons/Edit\";\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\nimport  dayjs  from 'dayjs';\r\nimport { useToasts } from 'react-toast-notifications'\r\n\r\nconst styles = theme => ({\r\n  root: {\r\n    '& . MuiTableCell-head': {\r\n      fontSize: '1.25rem'\r\n    }\r\n  },\r\n  paper: {\r\n    margin: theme.spacing(2),\r\n    padding: theme.spacing(2)\r\n  }\r\n})\r\n\r\nconst Generos = ({ classes, ...props }) => {\r\n  const [currentId, setCurrentId] = useState(0)\r\n\r\n  useEffect(() => {\r\n    props.fetchAllGeneros()\r\n  }, [])\r\n\r\n  //toast  \r\n  const { addToast } = useToasts()\r\n\r\n  const onDelete = id => {\r\n    if(window.confirm('Confirmar exclusão do gênero?'))\r\n    props.deleteGenero(id,() => addToast(\"Exclusão realizada com sucesso!\", { appearance: 'info' }))\r\n  }\r\n\r\n  return (\r\n    <Paper className={classes.paper}>\r\n      <Grid container>\r\n        <Grid item xs={6}>\r\n          <GenerosForms {...({ currentId, setCurrentId })} />\r\n        </Grid>\r\n\r\n        <Grid item xs={6}>\r\n          <TableContainer>\r\n            <table>\r\n              <TableHead className={classes.root}>\r\n                <TableRow>\r\n                  <TableCell>Nome</TableCell>\r\n                  <TableCell>Data Criação</TableCell>\r\n                  <TableCell>Situação</TableCell>\r\n                  <tableCell></tableCell>\r\n                </TableRow>\r\n              </TableHead>\r\n              <TableBody>\r\n                {\r\n                  props.generoList.map((record, index) => {\r\n                    return (<TableRow key={index}>\r\n                      <TableCell>{record.nome}</TableCell>\r\n                      {/* <TableCell> {record.dataCriacao} </TableCell> */}\r\n                      <TableCell> { dayjs(record.dataCriacao).format('DD-MM-YYYY') } </TableCell>\r\n                      <TableCell>{record.ativo}</TableCell>\r\n                      <tableCell>\r\n                        <ButtonGroup variant=\"Text\">\r\n                          <Button><EditIcon color =\"primary\"\r\n                          onClick={() =>  { setCurrentId(record.id) }} /> </Button>\r\n                                                  \r\n                          <Button><DeleteIcon color =\"secondary\" \r\n                          onClick={() => onDelete(record.id)} /> </Button>\r\n                        </ButtonGroup>\r\n\r\n                      </tableCell>\r\n                    </TableRow>)\r\n                  })\r\n                }\r\n              </TableBody>\r\n            </table>\r\n          </TableContainer>\r\n        </Grid>\r\n\r\n      </Grid>\r\n    </Paper>\r\n  )\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  generoList: state.genero.list\r\n})\r\n\r\nconst mapActionToProps = {\r\n  fetchAllGeneros: actions.fetchAll,\r\n  deleteGenero: actions.Delete\r\n}\r\n\r\nexport default connect(mapStateToProps, mapActionToProps)(withStyles(styles)(Generos));\r\n","import React, { useState, useEffect } from 'react'\r\nimport { Grid, TextField, withStyles, FormControl, InputLabel, Select, MenuItem, Button, FormHelperText } from '@material-ui/core';\r\nimport useForm from \"./useForm\";\r\nimport { connect } from 'react-redux'\r\nimport * as actions from '../Actions/filme'\r\nimport * as actionsGenero from '../Actions/genero'\r\nimport { useToasts } from 'react-toast-notifications'\r\nimport  dayjs  from 'dayjs'\r\n\r\nconst styles = theme =>({\r\n    root: {\r\n        '& .MuiTextField-root': {\r\n            margin: theme.spacing(1),\r\n            minWidth: 230,\r\n        }\r\n    },\r\n    formControl: {\r\n        margin: theme.spacing(1),\r\n        minWidth: 230,\r\n    },\r\n    smMargin:{\r\n        margin: theme.spacing(1)\r\n    }\r\n})\r\n\r\nconst initialFieldValues ={\r\n    nome : '',\r\n    dataCriacao : '',\r\n    idGenero : '',\r\n    ativo : ''\r\n}\r\n\r\nconst FilmesForms = ({ classes, ...props }) => {\r\n\r\n    //toast  \r\n    const { addToast } = useToasts()\r\n\r\n    //validação de campos\r\n const validate = (fieldValues = values) => {\r\n    let temp = { ...errors }\r\n    // if('usuario' in fieldValues)\r\n    //     temp.usuario = fieldValues.usuario? \"\" : \"Campo Obrigatório.\"\r\n    // // if(!fieldValues.senha)\r\n    // //     temp.senha = fieldValues.senha? \"\" : \"Campo Obrigatório.\"\r\n    // if('senha' in fieldValues)\r\n    // temp.senha = fieldValues.senha? \"\" : \"Campo Obrigatório.\"\r\n    setErrors({\r\n        ...temp\r\n    })\r\n\r\n    // if(fieldValues == values){\r\n    //     return Object.values(temp).every(x => x == \"\")\r\n    // }\r\n\r\n }\r\n     \r\n    const {\r\n        values,\r\n        setValues,\r\n        errors,\r\n        setErrors,\r\n        handleInputChange,\r\n        resetForm\r\n    } = useForm(initialFieldValues, validate, props.setCurrentId)\r\n\r\n    //material-ui select\r\n    const inputLabel = React.useRef(null);\r\n    const [labelWidth, setLabelWidth] = React.useState(0);\r\n    React.useEffect(() => {\r\n        setLabelWidth(inputLabel.current.offsetWidth);\r\n    }, []);\r\n\r\n\r\n    const handleSubmit = e => {\r\n        e.preventDefault()\r\n        //  if(validate()) {\r\n            const onSuccess = () => { \r\n                resetForm()\r\n                addToast(\"Submitted successfully\", { appearance: 'success' })\r\n            }\r\n\r\n            // values.dataCriacao = dayjs(new Date()).format('YYYY-MM-DD')\r\n            values.dataCriacao = dayjs().format('YYYY-MM-DD')\r\n           \r\n            if(props.currentId == 0 ){\r\n                // if(name == \"incluir\"){\r\n                     props.createFilmes(values, onSuccess)\r\n                // }            \r\n            }else{\r\n                props.updateFilme(props.currentId,values, onSuccess)\r\n            }    \r\n            \r\n        //  }\r\n    }\r\n\r\n    const onDeleteAll = (() => {\r\n        \r\n        if(window.confirm('Confirmar exclusão dos registros?'))\r\n        {\r\n            props.filmeList.map((record, index) => {\r\n            props.deleteFilme(record.id,() => addToast(\"Exclusão realizada com sucesso!\", { appearance: 'info' }))    \r\n            })\r\n        }       \r\n      })\r\n\r\n\r\n    useEffect(() => {\r\n        // console.log(props.currentId)\r\n        if(props.currentId != 0) {\r\n            setValues({\r\n                ...props.filmeList.find(filme => filme.id == props.currentId)\r\n            })\r\n            setErrors({})\r\n           \r\n        }\r\n    }, [props.currentId])\r\n\r\n    useEffect(() => {\r\n\r\n        // props.fecthGenero();\r\n\r\n    }, [])\r\n\r\n    return (\r\n    <form autoComplete=\"off\" noValidate className={classes.root} onSubmit={handleSubmit}>\r\n      <Grid container>\r\n        <Grid Item xs ={6}>\r\n            <TextField\r\n                name= \"nome\"\r\n                variant = \"outlined\"\r\n                label=\"Nome\"\r\n                value={values.nome}\r\n                onChange={handleInputChange}\r\n                {...(errors.nome && { error: true, helperText: errors.nome })}\r\n                \r\n            />\r\n            \r\n\r\n            <FormControl variant=\"outlined\"\r\n                        className={classes.formControl}\r\n                        {...(errors.idGenero && { error: true })}\r\n                    >\r\n                        <InputLabel ref={inputLabel}>Genero</InputLabel>\r\n                        <Select\r\n                            name=\"genero\"\r\n                            value={values.ativo}\r\n                            onChange={handleInputChange}\r\n                            labelWidth={labelWidth}\r\n                        >\r\n                            <MenuItem value=\"\">Selecione</MenuItem>\r\n                            {/* <MenuItem value=\"Ativo\">Ativo</MenuItem>\r\n                            <MenuItem value=\"Inativo\">Inativo</MenuItem> */}\r\n{\r\n                        // props.filmeList.map((record, index) => {\r\n                        //     return (\r\n                        //         <MenuItem value= { record.idGenero.nome } >  { record.idGenero.nome }   </MenuItem>   \r\n                        //     )\r\n                        // })\r\n}\r\n                        </Select>\r\n                        {errors.ativo && <FormHelperText>{errors.ativo}</FormHelperText>}\r\n            </FormControl>\r\n\r\n            \r\n            <FormControl variant=\"outlined\"\r\n                        className={classes.formControl}\r\n                        {...(errors.ativo && { error: true })}\r\n                    >\r\n                        <InputLabel ref={inputLabel}>Situação</InputLabel>\r\n                        <Select\r\n                            name=\"ativo\"\r\n                            value={values.ativo}\r\n                            onChange={handleInputChange}\r\n                            labelWidth={labelWidth}\r\n                        >\r\n                            <MenuItem value=\"\">Selecione</MenuItem>\r\n                            <MenuItem value=\"Ativo\">Ativo</MenuItem>\r\n                            <MenuItem value=\"Inativo\">Inativo</MenuItem>\r\n                        </Select>\r\n                        {errors.ativo && <FormHelperText>{errors.ativo}</FormHelperText>}\r\n            </FormControl>\r\n\r\n            <div>\r\n                <button\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                    name=\"incluir\"\r\n                    type=\"submit\"\r\n                    className={classes.smMargin}                \r\n                >\r\n                    Submit\r\n                </button>\r\n\r\n                <button\r\n                    variant=\"contained\"\r\n                    name=\"deletar\"\r\n                    type=\"button\"\r\n                    className={classes.smMargin}                \r\n                    onClick={ onDeleteAll }\r\n                >\r\n                    Excluir Lista\r\n                </button>\r\n            </div>\r\n        </Grid>\r\n      </Grid>\r\n\r\n    </form>\r\n  )\r\n}\r\n\r\n\r\nconst mapStateToProps = state => ({\r\n    filmeList: state.filme.list\r\n})\r\n\r\n// const mapStateToProps = ({filme, genero}) => ({\r\n//     filmeList: state.filme.list,\r\n//     generoList: state.genero.list,\r\n// })\r\n  \r\nconst mapActionToProps = {\r\n    createFilmes: actions.create,\r\n    updateFilme: actions.update,\r\n    deleteFilme: actions.Delete\r\n}\r\n\r\nexport default connect(mapStateToProps, mapActionToProps)(withStyles(styles)(FilmesForms));\r\n","import React, { useState, useEffect } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport * as actions from '../Actions/filme'\r\nimport * as actionsGenero from '../Actions/genero'\r\nimport FilmesForms from './FilmeForm'\r\nimport { Grid, Paper, TableContainer, table, TableHead, TableRow, TableCell, TableBody, withStyles, ButtonGroup, Button } from '@material-ui/core'\r\nimport EditIcon from \"@material-ui/icons/Edit\";\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\nimport  dayjs  from 'dayjs';\r\nimport { useToasts } from 'react-toast-notifications'\r\n\r\nconst styles = theme => ({\r\n  root: {\r\n    '& . MuiTableCell-head': {\r\n      fontSize: '1.25rem'\r\n    }\r\n  },\r\n  paper: {\r\n    margin: theme.spacing(2),\r\n    padding: theme.spacing(2)\r\n  }\r\n})\r\n\r\nconst Filmes = ({ classes, ...props }) => {\r\n  const [currentId, setCurrentId] = useState(0)\r\n\r\n  useEffect(() => {\r\n    props.fetchAllFilmes()\r\n    // props.fetchAllGeneros()\r\n  }, [])\r\n\r\n  //toast\r\n  const { addToast } = useToasts()\r\n\r\n  const onDelete = id => {\r\n    if(window.confirm('Confirmar exclusão do registro?'))\r\n    props.deleteFilme(id,() => addToast(\"Exclusão realizada com sucesso!\", { appearance: 'info' }))\r\n  }\r\n\r\n  return (\r\n    <Paper className={classes.paper}>\r\n      <Grid container>\r\n        <Grid item xs={6}>\r\n          <FilmesForms {...({ currentId, setCurrentId })} />\r\n        </Grid>\r\n\r\n        <Grid item xs={6}>\r\n          <TableContainer>\r\n            <table>\r\n              <TableHead className={classes.root}>\r\n                <TableRow>\r\n                  <TableCell>Nome</TableCell>\r\n                  <TableCell>Data Criação</TableCell>\r\n                  <TableCell>Genêro</TableCell>\r\n                  <TableCell>Situação</TableCell>\r\n                  <tableCell></tableCell>\r\n                </TableRow>\r\n              </TableHead>\r\n              <TableBody>\r\n                {\r\n                 props.filmeList && props.filmeList.map((record, index) => {\r\n                    return (<TableRow key={index}>\r\n                      <TableCell>{record.nome}</TableCell>\r\n                      {/* <TableCell> {record.dataCriacao} </TableCell> */}\r\n                      <TableCell> { dayjs(record.dataCriacao).format('DD-MM-YYYY') } </TableCell>\r\n                      <TableCell>\r\n                          {record.generoId} \r\n                           \r\n\r\n\r\n                      </TableCell>\r\n                      <TableCell>{record.ativo}</TableCell>\r\n                      <tableCell>\r\n                        <ButtonGroup variant=\"Text\">\r\n                          <Button><EditIcon color =\"primary\"\r\n                          onClick={() =>  { setCurrentId(record.id) }} /> </Button>\r\n\r\n                          <Button><DeleteIcon color =\"secondary\"\r\n                          onClick={() => onDelete(record.id)} /> </Button>\r\n                        </ButtonGroup>\r\n\r\n                      </tableCell>\r\n                    </TableRow>)\r\n                  })\r\n                }\r\n              </TableBody>\r\n            </table>\r\n          </TableContainer>\r\n        </Grid>\r\n\r\n      </Grid>\r\n    </Paper>\r\n  )\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  filmeList: state.filme.list,\r\n})\r\n\r\nconst mapActionToProps = {\r\n  fetchAllFilmes: actions.fetchAll,\r\n  deleteFilme: actions.Delete\r\n}\r\n\r\nexport default connect(mapStateToProps, mapActionToProps)(withStyles(styles)(Filmes))\r\n","import React, { useState, useEffect } from 'react'\r\nimport { Grid, TextField, withStyles, FormControl, InputLabel, Select, MenuItem, Button, FormHelperText } from '@material-ui/core';\r\nimport useForm from \"./useForm\";\r\nimport { connect } from 'react-redux'\r\nimport * as actions from '../Actions/locacao'\r\nimport * as actionsFilme from '../Actions/filme'\r\nimport { useToasts } from 'react-toast-notifications'\r\nimport  dayjs  from 'dayjs'\r\n\r\nconst styles = theme =>({\r\n    root: {\r\n        '& .MuiTextField-root': {\r\n            margin: theme.spacing(1),\r\n            minWidth: 230,\r\n        }\r\n    },\r\n    formControl: {\r\n        margin: theme.spacing(1),\r\n        minWidth: 230,\r\n    },\r\n    smMargin:{\r\n        margin: theme.spacing(1)\r\n    }\r\n})\r\n\r\nconst initialFieldValues ={\r\n    nome : '',\r\n    dataCriacao : '',\r\n    idGenero : '',\r\n    ativo : ''\r\n}\r\n\r\nconst LocacaoForms = ({ classes, ...props }) => {\r\n\r\n    //toast  \r\n    const { addToast } = useToasts()\r\n\r\n    //validação de campos\r\n const validate = (fieldValues = values) => {\r\n    let temp = { ...errors }\r\n    // if('usuario' in fieldValues)\r\n    //     temp.usuario = fieldValues.usuario? \"\" : \"Campo Obrigatório.\"\r\n    // // if(!fieldValues.senha)\r\n    // //     temp.senha = fieldValues.senha? \"\" : \"Campo Obrigatório.\"\r\n    // if('senha' in fieldValues)\r\n    // temp.senha = fieldValues.senha? \"\" : \"Campo Obrigatório.\"\r\n    setErrors({\r\n        ...temp\r\n    })\r\n\r\n    // if(fieldValues == values){\r\n    //     return Object.values(temp).every(x => x == \"\")\r\n    // }\r\n\r\n }\r\n     \r\n    const {\r\n        values,\r\n        setValues,\r\n        errors,\r\n        setErrors,\r\n        handleInputChange,\r\n        resetForm\r\n    } = useForm(initialFieldValues, validate, props.setCurrentId)\r\n\r\n    //material-ui select\r\n    const inputLabel = React.useRef(null);\r\n    const [labelWidth, setLabelWidth] = React.useState(0);\r\n    React.useEffect(() => {\r\n        setLabelWidth(inputLabel.current.offsetWidth);\r\n    }, []);\r\n\r\n\r\n    const handleSubmit = e => {\r\n        e.preventDefault()\r\n        //  if(validate()) {\r\n            const onSuccess = () => { \r\n                resetForm()\r\n                addToast(\"Submitted successfully\", { appearance: 'success' })\r\n            }\r\n\r\n            // values.dataCriacao = dayjs(new Date()).format('YYYY-MM-DD')\r\n            values.dataCriacao = dayjs().format('YYYY-MM-DD')\r\n           \r\n            if(props.currentId == 0 ){\r\n                // if(name == \"incluir\"){\r\n                     props.createlocacao(values, onSuccess)\r\n                // }            \r\n            }else{\r\n                props.updatelocacao(props.currentId,values, onSuccess)\r\n            }    \r\n            \r\n        //  }\r\n    }\r\n\r\n    const onDeleteAll = (() => {\r\n        \r\n        if(window.confirm('Confirmar exclusão dos registros?'))\r\n        {\r\n            props.locacaoList.map((record, index) => {\r\n            props.deleteLocacao(record.id,() => addToast(\"Exclusão realizada com sucesso!\", { appearance: 'info' }))    \r\n            })\r\n        }       \r\n      })\r\n\r\n\r\n    useEffect(() => {\r\n        // console.log(props.currentId)\r\n        if(props.currentId != 0) {\r\n            setValues({\r\n                ...props.locacaoList.find(locacao => locacao.id == props.currentId)\r\n            })\r\n            setErrors({})\r\n           \r\n        }\r\n    }, [props.currentId])\r\n\r\n    useEffect(() => {\r\n\r\n        // props.fecthGenero();\r\n\r\n    }, [])\r\n\r\n    return (\r\n    <form autoComplete=\"off\" noValidate className={classes.root} onSubmit={handleSubmit}>\r\n      <Grid container>\r\n        <Grid Item xs ={6}>\r\n            <FormControl variant=\"outlined\"\r\n                        className={classes.formControl}\r\n                        {...(errors.idGenero && { error: true })}\r\n                    >\r\n                        <InputLabel ref={inputLabel}>Filme</InputLabel>\r\n                        <Select\r\n                            name=\"genero\"\r\n                            value={values.ativo}\r\n                            onChange={handleInputChange}\r\n                            labelWidth={labelWidth}\r\n                        >\r\n                            <MenuItem value=\"\">Selecione</MenuItem>\r\n                            {/* <MenuItem value=\"Ativo\">Ativo</MenuItem>\r\n                            <MenuItem value=\"Inativo\">Inativo</MenuItem> */}\r\n{\r\n                        // props.filmeList.map((record, index) => {\r\n                        //     return (\r\n                        //         <MenuItem value= { record.idGenero.nome } >  { record.idGenero.nome }   </MenuItem>   \r\n                        //     )\r\n                        // })\r\n}\r\n                        </Select>\r\n                        {errors.ativo && <FormHelperText>{errors.ativo}</FormHelperText>}\r\n            </FormControl>\r\n           \r\n            \r\n            <TextField\r\n                name= \"cpf\"\r\n                variant = \"outlined\"\r\n                label=\"CPF\"\r\n                value={values.cpf}\r\n                onChange={handleInputChange}\r\n                {...(errors.cpf && { error: true, helperText: errors.cpf })}                \r\n            />\r\n\r\n            <div>\r\n                <button\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                    name=\"incluir\"\r\n                    type=\"submit\"\r\n                    className={classes.smMargin}                \r\n                >\r\n                    Submit\r\n                </button>\r\n\r\n                <button\r\n                    variant=\"contained\"\r\n                    name=\"deletar\"\r\n                    type=\"button\"\r\n                    className={classes.smMargin}                \r\n                    onClick={ onDeleteAll }\r\n                >\r\n                    Excluir Lista\r\n                </button>\r\n            </div>\r\n        </Grid>\r\n      </Grid>\r\n\r\n    </form>\r\n  )\r\n}\r\n\r\n\r\nconst mapStateToProps = state => ({\r\n    locacaoList: state.locacao.list\r\n})\r\n\r\n// const mapStateToProps = ({filme, genero}) => ({\r\n//     filmeList: state.filme.list,\r\n//     generoList: state.genero.list,\r\n// })\r\n  \r\nconst mapActionToProps = {\r\n    createLocacao: actions.create,\r\n    updateLocacao: actions.update,\r\n    deleteLocacao: actions.Delete\r\n}\r\n\r\nexport default connect(mapStateToProps, mapActionToProps)(withStyles(styles)(LocacaoForms));\r\n","import React, { useState, useEffect } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport * as actions from '../Actions/locacao'\r\nimport * as actionsFilme from '../Actions/filme'\r\nimport LocacaoForms from './LocacaoForm'\r\nimport { Grid, Paper, TableContainer, table, TableHead, TableRow, TableCell, TableBody, withStyles, ButtonGroup, Button } from '@material-ui/core'\r\nimport EditIcon from \"@material-ui/icons/Edit\";\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\nimport  dayjs  from 'dayjs';\r\nimport { useToasts } from 'react-toast-notifications'\r\n\r\nconst styles = theme => ({\r\n  root: {\r\n    '& . MuiTableCell-head': {\r\n      fontSize: '1.25rem'\r\n    }\r\n  },\r\n  paper: {\r\n    margin: theme.spacing(2),\r\n    padding: theme.spacing(2)\r\n  }\r\n})\r\n\r\nconst Locacao = ({ classes, ...props }) => {\r\n  const [currentId, setCurrentId] = useState(0)\r\n\r\n  useEffect(() => {\r\n    props.fetchAllLocacao()\r\n    // props.fetchAllGeneros()\r\n  }, [])\r\n\r\n  //toast\r\n  const { addToast } = useToasts()\r\n\r\n  const onDelete = id => {\r\n    if(window.confirm('Confirmar exclusão do registro?'))\r\n    props.deleteLocacao(id,() => addToast(\"Exclusão realizada com sucesso!\", { appearance: 'info' }))\r\n  }\r\n\r\n  return (\r\n    <Paper className={classes.paper}>\r\n      <Grid container>\r\n        <Grid item xs={6}>\r\n          <LocacaoForms {...({ currentId, setCurrentId })} />\r\n        </Grid>\r\n\r\n        <Grid item xs={6}>\r\n          <TableContainer>\r\n            <table>\r\n              <TableHead className={classes.root}>\r\n                <TableRow>\r\n                  <TableCell>FIlme</TableCell>\r\n                  <TableCell>CPF</TableCell>\r\n                  <TableCell>Data Criação</TableCell>\r\n                  <tableCell></tableCell>\r\n                </TableRow>\r\n              </TableHead>\r\n              <TableBody>\r\n                {\r\n                 props.locacaoList && props.locacaoList.map((record, index) => {\r\n                    return (<TableRow key={index}>\r\n                      <TableCell>{record.filmeId}</TableCell>\r\n                      <TableCell>\r\n                          {record.cpf} \r\n                      </TableCell>\r\n                      <TableCell> { dayjs(record.dataCriacao).format('DD-MM-YYYY') } </TableCell>\r\n                      <TableCell>{record.ativo}</TableCell>\r\n                      <tableCell>\r\n                        <ButtonGroup variant=\"Text\">\r\n                          <Button><EditIcon color =\"primary\"\r\n                          onClick={() =>  { setCurrentId(record.id) }} /> </Button>\r\n\r\n                          <Button><DeleteIcon color =\"secondary\"\r\n                          onClick={() => onDelete(record.id)} /> </Button>\r\n                        </ButtonGroup>\r\n\r\n                      </tableCell>\r\n                    </TableRow>)\r\n                  })\r\n                }\r\n              </TableBody>\r\n            </table>\r\n          </TableContainer>\r\n        </Grid>\r\n\r\n      </Grid>\r\n    </Paper>\r\n  )\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  locacaoList: state.locacao.list,\r\n})\r\n\r\nconst mapActionToProps = {\r\n  fetchAllLocacao: actions.fetchAll,\r\n  deleteLocacao: actions.Delete\r\n}\r\n\r\nexport default connect(mapStateToProps, mapActionToProps)(withStyles(styles)(Locacao))\r\n","import React from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport { store } from './Actions/Store';\nimport { Provider, connect, link } from 'react-redux';\nimport Usuario from './Components/Usuarios';\n import Genero from './Components/Generos';\nimport Filme from './Components/Filmes';\nimport Locacao from './Components/locacaos';\nimport { Container } from \"@material-ui/core\";\nimport { ToastProvider } from 'react-toast-notifications'\nimport { BrowserRouter as Router, Route, Link, Switch } from \"react-router-dom\";\n\nfunction App() {\n  return (\n    <Router>\n    <Provider store={ store }>\n      <ToastProvider autoDismiss={true}>\n        <Container maxWidth = \"lg\">\n        <div>\n          <ul>\n            <li><Link to=\"/usuario\">Usuários </Link></li>\n            <li><Link to=\"/genero\">Gêneros </Link></li>\n            <li><Link to=\"/filme\">Filmes </Link></li>\n            <li><Link to=\"/locacao\">Locações </Link></li>\n          </ul>\n        </div>\n        <hr/>\n        <Switch>\n          <Route path=\"/usuario\" exact component={ Usuario } />\n          <Route path=\"/genero\" exact component={ Genero } />\n          <Route path=\"/filme\" exact component={ Filme } />\n          <Route path=\"/locacao\" exact component={ Locacao } />\n        </Switch>\n        </Container>\n      </ToastProvider>\n    </Provider>\n    </Router>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();"],"sourceRoot":""}